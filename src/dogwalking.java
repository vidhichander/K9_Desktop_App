
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.StringTokenizer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vidhi
 */

/* This form will allow the user to choose/enter the name of a dog in the system and enter the details of the individual walking the dog. 
   The date and time that the dog is checked out will be automatically generated by the system.  
*/

public class dogwalking extends javax.swing.JPanel {

    /**
     * Creates new form dogwalking
     */
    public dogwalking() {
        initComponents();
        c1.setVisible(false);
        t7.setVisible(false);
    name1.setText("Search");
    name1.setForeground(Color.lightGray);
        t7.setSelected(true);
        nacombo.removeAllItems();
        nacombo.addItem("Select Dog");
        Date date1 = new Date();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        String dat2 = format.format(date1);
        try {
            FileReader tid = new FileReader("New Dogs.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();

                nacombo.addItem(d);
                try {
                    FileReader tide = new FileReader("Dog Walking.txt");
                    BufferedReader tdatae = new BufferedReader(tide);
                    String noe = "";
                    while ((noe = tdatae.readLine()) != null) {
                        StringTokenizer ote = new StringTokenizer(noe, "|");
                        String ce = ote.nextToken();
                        String de = ote.nextToken();

                        if (ce.equals(d) && de.equals(dat2)) {

                            nacombo.removeItem(d);

                        }

                    }

                } catch (Exception err) {

                }
            }
        } catch (Exception errr) {

        }
        c1.removeAllItems();
        c1.addItem("Select Name");

        int x = 0;
        Object l = "";
        try {
            FileReader tid = new FileReader("Dog Walking.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                x = 0;
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();
                String e = ot.nextToken();
                String f = ot.nextToken();
                String g = ot.nextToken();
                String h = ot.nextToken();
                String i = ot.nextToken();
                int p = c1.getItemCount();
                for (int j = 0; j < p; j++) {
                    l = c1.getItemAt(j);
                    if (g.equals(l)) {
                        x = x + 1;
                    }
                }
                if (x == 0) {
                    c1.addItem(g);
                }

            }

        } catch (Exception err) {

        }

        date.setText(String.valueOf(dat2));
        date.setEditable(false);
        int h = LocalDateTime.now().getHour();
        int m = LocalDateTime.now().getMinute();
        t1.setText(String.valueOf(h));
        if (m < 10) {
            String m1 = "0" + String.valueOf(m);
            t3.setText(String.valueOf(m1));

        } else {
            t3.setText(String.valueOf(m));

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        sch = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        num = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        name1 = new javax.swing.JTextField();
        na1 = new javax.swing.JLabel();
        da1 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        ts = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        na2 = new javax.swing.JLabel();
        ad1 = new javax.swing.JLabel();
        mn = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        v1 = new javax.swing.JTextField();
        add = new javax.swing.JTextField();
        numb = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        nacombo = new javax.swing.JComboBox();
        n1 = new javax.swing.JRadioButton();
        y1 = new javax.swing.JRadioButton();
        ft = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        t3 = new javax.swing.JTextField();
        c1 = new javax.swing.JComboBox();
        t7 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();

        jLabel7.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        jLabel7.setText("Name:");

        jLabel1.setText("Age");

        sch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schActionPerformed(evt);
            }
        });

        jLabel13.setText("School");

        jLabel10.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        jLabel10.setText("Mobile Number:");

        jLabel6.setText("jLabel6");

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel3.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel3.setText("Check Out");

        name1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                name1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                name1FocusLost(evt);
            }
        });
        name1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name1ActionPerformed(evt);
            }
        });
        name1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                name1KeyReleased(evt);
            }
        });

        na1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        na1.setText("Name of dog:");

        da1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        da1.setText("Date:");

        t1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t1FocusGained(evt);
            }
        });
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        ts.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        ts.setText("Time Started (24hr clock):");

        jLabel9.setFont(new java.awt.Font("Chalkboard", 0, 15)); // NOI18N
        jLabel9.setText("Details of the individual walking the dog:");

        na2.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        na2.setText("Name:");

        ad1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        ad1.setText("Address:");

        mn.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        mn.setText("Mobile Number:");

        v1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                v1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                v1FocusLost(evt);
            }
        });
        v1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                v1KeyReleased(evt);
            }
        });

        add.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addFocusGained(evt);
            }
        });
        add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addKeyReleased(evt);
            }
        });

        numb.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numbFocusGained(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        nacombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nacomboFocusGained(evt);
            }
        });
        nacombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nacomboActionPerformed(evt);
            }
        });
        nacombo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                nacomboPropertyChange(evt);
            }
        });

        buttonGroup3.add(n1);
        n1.setText("No");
        n1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n1ActionPerformed(evt);
            }
        });

        buttonGroup3.add(y1);
        y1.setText("Yes");
        y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y1ActionPerformed(evt);
            }
        });

        ft.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        ft.setText("First Time?");

        jLabel19.setText(":");

        t3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t3FocusGained(evt);
            }
        });
        t3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t3ActionPerformed(evt);
            }
        });

        c1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Name", " " }));
        c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                c1FocusGained(evt);
            }
        });
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        c1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                c1PropertyChange(evt);
            }
        });

        buttonGroup3.add(t7);
        t7.setText("a");
        t7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t7ActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon("/Users/Rajul/Downloads/logo.gif")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel4.setText("Dog Walking");

        jLabel8.setFont(new java.awt.Font("Chalkboard SE", 2, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("Record the data of dogs taken out");

        jLabel11.setFont(new java.awt.Font("Chalkboard SE", 2, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 153));
        jLabel11.setText("of the kennel");

        date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dateFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)))
                .addGap(26, 26, 26)
                .addComponent(jLabel5))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(na1)
                .addGap(32, 32, 32)
                .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(t7)
                .addGap(69, 69, 69)
                .addComponent(nacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(da1)
                .addGap(80, 80, 80)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(ts)
                .addGap(12, 12, 12)
                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel9))
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel17)
                .addGap(6, 6, 6)
                .addComponent(ft)
                .addGap(53, 53, 53)
                .addComponent(y1)
                .addGap(12, 12, 12)
                .addComponent(n1))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(na2)
                .addGap(82, 82, 82)
                .addComponent(v1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(ad1)
                .addGap(68, 68, 68)
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(mn)
                .addGap(23, 23, 23)
                .addComponent(numb, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jButton1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3))
                    .addComponent(jLabel5))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel11)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(na1)
                    .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(t7))
                    .addComponent(nacombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(da1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(ts))
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel19))
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel17))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(ft))
                    .addComponent(y1)
                    .addComponent(n1))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(na2))
                    .addComponent(v1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(ad1))
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(mn))
                    .addComponent(numb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void schActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schActionPerformed

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    private void y1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y1ActionPerformed
        if (y1.isSelected()) {
            c1.setVisible(false);
            ft.setText("First Time?");
            ft.setForeground(Color.black);
            v1.setText("");
    v1.setForeground(Color.black);
        }
    }//GEN-LAST:event_y1ActionPerformed

    private void n1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n1ActionPerformed
        if (n1.isSelected()) {
            c1.setVisible(true);
            ft.setText("First Time?");
            ft.setForeground(Color.black);
v1.setText("Search");
    v1.setForeground(Color.lightGray);
        }    }//GEN-LAST:event_n1ActionPerformed

    private void name1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name1KeyReleased
        nacombo.removeAllItems();
        String n = name1.getText();
        int le = n.length();
        Date date1 = new Date();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        String dat2 = format.format(date1);
        String x = "";
        try {
            FileReader tid = new FileReader("New Dogs.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();

                x = "";
                for (int i = 0; i < le; i++) {
                    x = x + d.substring(i, i + 1);
                    if ((x).equals(n) || x.toUpperCase().equals(n) || x.toLowerCase().equals(n)) {

                        nacombo.addItem(d);
                        try {
                            FileReader tide = new FileReader("Dog Walking.txt");
                            BufferedReader tdatae = new BufferedReader(tide);
                            String noe = "";
                            while ((noe = tdatae.readLine()) != null) {
                                StringTokenizer ote = new StringTokenizer(noe, "|");
                                String ce = ote.nextToken();
                                String de = ote.nextToken();

                                if (ce.equals(d) && de.equals(dat2)) {

                                    nacombo.removeItem(d);

                                }

                            }

                        } catch (Exception err) {

                        }
                    }

                }

            }
        } catch (Exception err) {

        }
        if (n.equals("")) {
            nacombo.removeAllItems();
            nacombo.addItem("Select Dog");
            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();

                    String d = ot.nextToken();

                    nacombo.addItem(d);
                    try {
                        FileReader tide = new FileReader("Dog Walking.txt");
                        BufferedReader tdatae = new BufferedReader(tide);
                        String noe = "";
                        while ((noe = tdatae.readLine()) != null) {
                            StringTokenizer ote = new StringTokenizer(noe, "|");
                            String ce = ote.nextToken();
                            String de = ote.nextToken();

                            if (ce.equals(d) && de.equals(dat2)) {

                                nacombo.removeItem(d);

                            }

                        }

                    } catch (Exception err) {

                    }
                }

            } catch (Exception err) {

            }
        }
    }//GEN-LAST:event_name1KeyReleased

    private void t3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t3ActionPerformed

    private void v1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_v1KeyReleased
        String v = v1.getText();
        int le = v.length();
        c1.removeAllItems();
        int x1 = 0;
        Object l = "";
        String x = "";
        try {
            FileReader tid = new FileReader("Dog Walking.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                x1 = 0;
                String c = ot.nextToken();
                String d = ot.nextToken();
                String e = ot.nextToken();
                String f = ot.nextToken();
                String f1 = ot.nextToken();
                String g = ot.nextToken();
                String h = ot.nextToken();
                int p = c1.getItemCount();
                for (int j = 0; j < p; j++) {
                    l = c1.getItemAt(j);
                    if (g.equals(l)) {
                        x1 = x1 + 1;
                    }
                }
                if (x1 == 0) {

                    x = "";
                    for (int i = 0; i < le; i++) {
                        x = x + f1.substring(i, i + 1);

                        if ((x).equals(v) || x.toUpperCase().equals(v) || x.toLowerCase().equals(v)) {
                            c1.addItem(f1);
                        }

                    }

                }
            }
        } catch (Exception err) {

        }

        if (v.equals("")) {
            c1.removeAllItems();
            c1.addItem("Select Name");
            add.setText("");
            numb.setText("");

            try {
                FileReader tid = new FileReader("Dog Walking.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    x1 = 0;
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String g = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    int p = c1.getItemCount();
                    for (int j = 0; j < p; j++) {
                        l = c1.getItemAt(j);
                        if (g.equals(l)) {
                            x1 = x1 + 1;
                        }
                    }
                    if (x1 == 0) {
                        c1.addItem(g);
                    }

                }

            } catch (Exception err) {

            }

        }
        String t = v1.getText();
        if (!(t.equals(""))) {

            int l1 = t.length();
            String x2 = (t.substring(0, 1)).toUpperCase();

            String y = "";
            for (int i = 1; i < l1; i++) {
                y = y + (t.substring(i, i + 1));

            }
            v1.setText(x2 + y);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_v1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String dog = "" + nacombo.getSelectedItem();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        String h = t1.getText();
        String c = t3.getText();
        String walk = "" + c1.getSelectedItem();
        String loc = add.getText();
        String no = numb.getText();
        String vol = v1.getText();
        boolean er = false;
        boolean ero = false;
        Date date1 = new Date();
        boolean ess = false;
        boolean essr = false;
        int l = no.length();
        String x;
        String y = "";
        try {
            FileReader tid = new FileReader("Dog Walking.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no1 = "";
            while ((no1 = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no1, "|");
                String ca = ot.nextToken();
                String d = ot.nextToken();
                String c1a = ot.nextToken();
                String d1 = ot.nextToken();
                String c2 = ot.nextToken();
                String d3 = ot.nextToken();
                Date d2 = format.parse(d);
                if (ca.equals(dog)) {
                    try {
                        FileReader tida = new FileReader("Dogs checkin.txt");
                        BufferedReader tdataa = new BufferedReader(tida);
                        String noa = "";
                        while ((noa = tdataa.readLine()) != null) {
                            StringTokenizer ota = new StringTokenizer(noa, "|");
                            String ca3 = ota.nextToken();
                            String da = ota.nextToken();
                            String ca1 = ota.nextToken();
                            String da11 = ota.nextToken();
                            String ca2 = ota.nextToken();
                            String da3 = ota.nextToken();
                            Date da2 = format.parse(ca3);
                            int dda;
                            int ddd;
                            if ((Integer.parseInt(ca2) + Integer.parseInt(ca1)) >= 24) {
                                dda = Math.round(Integer.parseInt(ca2) / 24);
                                ddd = dda + 1;

                            } else {
                                dda = 0;
                                ddd = 0;
                            }
                            Date dateBefore = new Date(da2.getTime() - dda * 24 * 3600 * 1000);
                            String db = format.format(dateBefore);
                            Date dateBefore1 = new Date(da2.getTime() - ddd * 24 * 3600 * 1000);
                            String db1 = format.format(dateBefore1);
                            if ((da.equals(ca)) && ((db.equals(d)) || (db1.equals(d)))) {
                                essr = false;
                                System.out.println(da + " " + db + " " + d + " " + db1 + " " + ca + " false");

                                break;
                            } else {
                                essr = true;
                                System.out.println(da + " " + db + " " + d + " " + db1 + " " + ca + " true");
                            }

                        }

                    } catch (Exception err) {

                    }
                }

            }

        } catch (Exception err) {

        }
        if (essr == true) {
            ero = true;
            javax.swing.JOptionPane.showMessageDialog(null, "DOG HAS ALREADY BEEN CHECKED OUT OF KENNEL", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);
            mn.setText("* Mobile Number:");
            mn.setForeground(Color.red);
        }

        for (int i = 0; i < l; i++) {
            x = no.substring(i, i + 1);
            if (x.matches("[a-zA-Z]+")) {
                ess = true;

            }
        }
        if (ess == true) {
            ero = true;
            javax.swing.JOptionPane.showMessageDialog(null, "Number is Invalid", "Message:ERROR!", 
            javax.swing.JOptionPane.ERROR_MESSAGE);
            mn.setText("* Mobile Number:");
            mn.setForeground(Color.red);
        }

        if (dog.equals(("Select Dog"))) {
            er = true;
            na1.setText("* Name of dog:");
            na1.setForeground(Color.red);
        }

        if (h.equals("") || c.equals("")) {
            er = true;
            ts.setText("* Time Started (24hr clock):");
            ts.setForeground(Color.red);
        }

        if (t7.isSelected()) {
            er = true;
            ft.setText("* First Time?");
            ft.setForeground(Color.red);
        }
        if ((n1.isSelected() && walk.equals("Select Name"))) {
            er = true;
            na2.setText("* Name:");
            na2.setForeground(Color.red);

        }
        if ((y1.isSelected() && vol.equals("")) || (vol.equals(""))) {
            er = true;
            na2.setText("* Name:");
            na2.setForeground(Color.red);

        }
        if (loc.equals((""))) {
            er = true;
            ad1.setText("* Address:");
            ad1.setForeground(Color.red);
        }
        if (no.equals("")) {
            er = true;
            mn.setText("* Mobile Number:");
            mn.setForeground(Color.red);

        }
        if (er == true) {
            javax.swing.JOptionPane.showMessageDialog(null, "Please complete all fields", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        if (er == false && ero == false) {
            String db = format.format(date1);

            try {
                FileWriter gr = new FileWriter("Dog Walking.txt", true);
                PrintWriter groom = new PrintWriter(gr);
                if (n1.isSelected()) {
                    groom.println(dog + "|" + db + "|" + h + "|" + c + "|" + walk + "|" + loc + "|" + no);
                }
                if (y1.isSelected()) {
                    groom.println(dog + "|" + db + "|" + h + "|" + c + "|" + vol + "|" + loc + "|" + no);
                }
                groom.close();

            } catch (Exception error) {

            }

            name1.setText("");
            nacombo.removeAllItems();
            nacombo.addItem("Select Dog");
            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no1 = "";
                while ((no1 = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no1, "|");
                    String c11 = ot.nextToken();
                    String d = ot.nextToken();

                    nacombo.addItem(d);

                }

            } catch (Exception err) {

            }
            c1.removeAllItems();
            c1.addItem("Select Name");
            String x1 = "";
            try {
                FileReader tid = new FileReader("Dog Walking.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no2 = "";
                while ((no2 = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no2, "|");
                    String c11 = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String g = ot.nextToken();
                    String h11 = ot.nextToken();
                    String k = ot.nextToken();

                    c1.addItem(g);
                }

            } catch (Exception err) {

            }
            t7.setSelected(true);
            t1.setText("");
            t3.setText("");
            v1.setText("");
            add.setText("");
            numb.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        String v = "" + c1.getSelectedItem();
        String x = "";
        try {
            FileReader tid = new FileReader("Dog Walking.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();
                String e = ot.nextToken();
                String f = ot.nextToken();
                String f1 = ot.nextToken();
                String g = ot.nextToken();
                String h = ot.nextToken();

                if (f1.equals(v) && n1.isSelected()) {
                    add.setText(g);
                    numb.setText(h);
                }

            }
        } catch (Exception err) {

        }
        if (v.equals("Select Name") || v.equals("")) {
            add.setText("");
            numb.setText("");
        }


    }//GEN-LAST:event_c1ActionPerformed

    private void nacomboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_nacomboPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_nacomboPropertyChange

    private void nacomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nacomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nacomboActionPerformed

    private void name1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name1FocusLost
if ((name1.getText()).equals("")){
    name1.setText("Search");
    name1.setForeground(Color.lightGray);}        // TODO add your handling code here:
    }//GEN-LAST:event_name1FocusLost

    private void name1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name1FocusGained
        na1.setText("Name of dog:");
        na1.setForeground(Color.black);   
        name1.setText("");
        name1.setForeground(Color.black);// TODO add your handling code here:
    }//GEN-LAST:event_name1FocusGained

    private void nacomboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nacomboFocusGained
        na1.setText("Name of dog:");
        na1.setForeground(Color.black);
     }//GEN-LAST:event_nacomboFocusGained

    private void t7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t7ActionPerformed

    private void t1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t1FocusGained
        ts.setText("Time Started (24hr clock):");
        ts.setForeground(Color.black);
    }//GEN-LAST:event_t1FocusGained

    private void t3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t3FocusGained
        ts.setText("Time Started (24hr clock):");
        ts.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_t3FocusGained

    private void v1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v1FocusGained
v1.setText("");
        v1.setForeground(Color.black);
        na2.setText("Name:");
        na2.setForeground(Color.black);           // TODO add your handling code here:
    }//GEN-LAST:event_v1FocusGained

    private void c1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c1FocusGained

        na2.setText("Name:");
        na2.setForeground(Color.black);   // TODO add your handling code here:
    }//GEN-LAST:event_c1FocusGained

    private void addFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addFocusGained
        ad1.setText("Address:");
        ad1.setForeground(Color.black);
        // TODO add your handling code here:
    }//GEN-LAST:event_addFocusGained

    private void numbFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numbFocusGained
        mn.setText("Mobile Number:");
        mn.setForeground(Color.black);

// TODO add your handling code here:
    }//GEN-LAST:event_numbFocusGained

    private void dateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFocusGained
        da1.setText("Date:");
        da1.setForeground(Color.black);
    }//GEN-LAST:event_dateFocusGained

    private void c1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_c1PropertyChange
        String v = "" + c1.getSelectedItem();
        String x = "";
        try {
            FileReader tid = new FileReader("Dog Walking.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();
                String e = ot.nextToken();
                String f = ot.nextToken();
                String f1 = ot.nextToken();
                String g = ot.nextToken();
                String h = ot.nextToken();

                if (f1.equals(v) && n1.isSelected()) {
                    add.setText(g);
                    numb.setText(h);
                }

            }
        } catch (Exception err) {

        }
        if (v.equals("Select Name") || v.equals("")) {
            add.setText("");
            numb.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_c1PropertyChange

    private void addKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addKeyReleased
        String t = add.getText();
        if (!(t.equals(""))) {

            int l1 = t.length();
            String x = (t.substring(0, 1)).toUpperCase();

            String y = "";
            for (int i = 1; i < l1; i++) {
                y = y + (t.substring(i, i + 1));

            }
            add.setText(x + y);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_addKeyReleased

    private void v1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v1FocusLost
if (n1.isSelected()&& (v1.getText().equals(""))){
        
        v1.setText("Search");
        v1.setForeground(Color.lightGray);
}
    }//GEN-LAST:event_v1FocusLost

    private void name1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ad1;
    private javax.swing.JTextField add;
    private javax.swing.JTextField age;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox c1;
    private javax.swing.JLabel da1;
    private javax.swing.JTextField date;
    private javax.swing.JLabel ft;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel mn;
    private javax.swing.JRadioButton n1;
    private javax.swing.JLabel na1;
    private javax.swing.JLabel na2;
    private javax.swing.JComboBox nacombo;
    private javax.swing.JTextField name;
    private javax.swing.JTextField name1;
    private javax.swing.JTextField num;
    private javax.swing.JTextField numb;
    private javax.swing.JTextField sch;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t3;
    private javax.swing.JRadioButton t7;
    private javax.swing.JLabel ts;
    private javax.swing.JTextField v1;
    private javax.swing.JRadioButton y1;
    // End of variables declaration//GEN-END:variables
}
