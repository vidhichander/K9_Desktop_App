
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.StringTokenizer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vidhi
 * 
 */
/* The form accepts the name of the volunteer and the work done by the volunteer. 
   This data is then saved along with the generated date, time, and duration spent at kennel. 
*/
public class checkout extends javax.swing.JPanel {

    /**
     * Creates new form checkout
     */
    public checkout() {
        initComponents();
        n1.removeAllItems();
        n1.addItem("Select Volunteer");
        h.setEditable(false);
        min.setEditable(false);
        Date date1 = new Date();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        String dat2 = format.format(date1);
        da.setText(String.valueOf(dat2));
        int h1 = LocalDateTime.now().getHour();
        int m = LocalDateTime.now().getMinute();
        t4.setText(String.valueOf(h1));
        if (m < 10) {
            String m1 = "0" + String.valueOf(m);
            t5.setText(String.valueOf(m1));

        } else {
            t5.setText(String.valueOf(m));

        }
        h.setText("");
        min.setText("");
        try {
            FileReader tid = new FileReader("Volunteer checkin.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no1 = "";
            while ((no1 = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no1, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();
                Date p = format.parse(d);
                if (d.equals(dat2)) {
                    try {
                        FileReader stude = new FileReader("Volunteers.txt");
                        BufferedReader studae = new BufferedReader(stude);
                        String noe = "";
                        while ((noe = studae.readLine()) != null) {
                            StringTokenizer pze = new StringTokenizer(noe, "|");
                            String q = pze.nextToken();
                            String w = pze.nextToken();
                            if (c.equals(q)) {
                                n1.addItem(w);
                            }

                        }

                    } catch (Exception error) {

                    }
                }

            }
        } catch (Exception error) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        min = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        h = new javax.swing.JTextField();
        wd = new javax.swing.JLabel();
        work = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        nam = new javax.swing.JLabel();
        n1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        da2 = new javax.swing.JLabel();
        te = new javax.swing.JLabel();
        t4 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        t5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        da = new javax.swing.JTextField();

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setText("Mins");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 211, -1, -1));
        add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 206, 58, -1));

        jLabel8.setText("Hours");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 211, -1, -1));

        h.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hActionPerformed(evt);
            }
        });
        add(h, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 206, 50, -1));

        wd.setText("Work done:");
        add(wd, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 255, -1, -1));

        work.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                workFocusGained(evt);
            }
        });
        work.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                workKeyReleased(evt);
            }
        });
        add(work, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 250, 249, -1));

        jLabel6.setText("Duration:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 211, -1, -1));

        jLabel4.setFont(new java.awt.Font("Chalkboard", 0, 24)); // NOI18N
        jLabel4.setText("Volunteer Check-out");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 6, 92, -1));

        name.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        name.setForeground(java.awt.Color.lightGray);
        name.setText("Search");
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFocusLost(evt);
            }
        });
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
        });
        add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 85, 140, -1));

        nam.setText("Name: ");
        add(nam, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 90, -1, -1));

        n1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                n1FocusGained(evt);
            }
        });
        n1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n1ActionPerformed(evt);
            }
        });
        n1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                n1PropertyChange(evt);
            }
        });
        add(n1, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 117, 140, -1));

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 288, -1, -1));

        da2.setText("Date:");
        add(da2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 26));

        te.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        te.setText("Time Ended (24hr clock):");
        add(te, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 167, -1, -1));

        t4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t4FocusGained(evt);
            }
        });
        t4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t4ActionPerformed(evt);
            }
        });
        t4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t4KeyReleased(evt);
            }
        });
        add(t4, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 162, 34, -1));

        jLabel20.setText(":");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 168, 7, -1));

        t5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t5FocusGained(evt);
            }
        });
        t5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t5ActionPerformed(evt);
            }
        });
        t5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t5KeyReleased(evt);
            }
        });
        add(t5, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 162, 34, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon("/Users/Rajul/Downloads/logo.gif")); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 6, -1, -1));

        da.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                daFocusGained(evt);
            }
        });
        add(da, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 130, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void n1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n1ActionPerformed
        String h11 = t4.getText();
        String m11 = t5.getText();
        int x1 = 0;
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Date date1 = new Date();
        int y = 0;
        String comb = "" + n1.getSelectedItem();
        int hr1 = 0;
        int min1 = 0;
        String ds = format.format(date1);
        if (!(h11.equals("")) && !(m11.equals(""))) {
            hr1 = Integer.parseInt(h11);
            min1 = Integer.parseInt(m11);
        }
        try {
            FileReader stud = new FileReader("Volunteer checkin.txt");
            BufferedReader studa = new BufferedReader(stud);
            String no = "";
            while ((no = studa.readLine()) != null) {
                StringTokenizer pz = new StringTokenizer(no, "|");
                String i = pz.nextToken();
                String e = pz.nextToken();
                int h2 = Integer.parseInt(pz.nextToken());
                int min2 = Integer.parseInt(pz.nextToken());
                Date e1 = format.parse(e);
                try {
                    FileReader stude = new FileReader("Volunteers.txt");
                    BufferedReader studae = new BufferedReader(stude);
                    String noe = "";
                    while ((noe = studae.readLine()) != null) {
                        StringTokenizer pze = new StringTokenizer(noe, "|");
                        String q = pze.nextToken();
                        String w = pze.nextToken();
                        if (i.equals(q)) {
                            if (w.equals(comb)) {
                                if (ds.equals(e)) {
                                    if (min1 >= min2) {
                                        x1 = hr1 - h2;
                                        y = min1 - min2;

                                    }
                                    if (min1 < min2) {
                                        x1 = (hr1 - h2) - 1;
                                        y = (min1 + 60) - min2;

                                    }
                                }
                            }
                        }
                    }
                } catch (Exception error) {

                }

            }
        } catch (Exception error) {

        }

        h.setText(String.valueOf(x1));
        min.setText(String.valueOf(y));

        if (h11.equals("") || m11.equals("")) {
            h.setText("");
            min.setText("");

        }
    }//GEN-LAST:event_n1ActionPerformed

    private void hActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hActionPerformed

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
        h.setText("");
        min.setText("");
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        String da1 = da.getText();
        Date date1 = new Date();

        n1.removeAllItems();
        String v = name.getText();
        int le = v.length();
        String x = "";
        try {
            FileReader stud = new FileReader("Volunteer checkin.txt");
            BufferedReader studa = new BufferedReader(stud);
            String no = "";
            while ((no = studa.readLine()) != null) {
                StringTokenizer pz = new StringTokenizer(no, "|");
                String i = pz.nextToken();
                String e = pz.nextToken();

                if (da1.equals(e)) {
                    try {
                        FileReader stude = new FileReader("Volunteers.txt");
                        BufferedReader studae = new BufferedReader(stude);
                        String noe = "";
                        while ((noe = studae.readLine()) != null) {
                            StringTokenizer pze = new StringTokenizer(noe, "|");
                            String q = pze.nextToken();
                            String w = pze.nextToken();
                            if (i.equals(q)) {
                                x = "";
                                for (int j = 0; j < le; j++) {
                                    x = x + w.substring(j, j + 1);

                                    if ((x).equals(v) || x.toUpperCase().equals(v) || x.toLowerCase().equals(v)) {
                                        n1.addItem(w);
                                    }

                                }

                            }

                        }

                    } catch (Exception error) {

                    }
                }
            }
        } catch (Exception error) {

        }

        if (v.equals("")) {
            n1.removeAllItems();
            n1.addItem("Select Volunteer");
            try {
                FileReader tid = new FileReader("Volunteer checkin.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no1 = "";
                while ((no1 = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no1, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    Date p = format.parse(d);
                    if (d.equals(da1)) {
                        try {
                            FileReader stude = new FileReader("Volunteers.txt");
                            BufferedReader studae = new BufferedReader(stude);
                            String noe = "";
                            while ((noe = studae.readLine()) != null) {
                                StringTokenizer pze = new StringTokenizer(noe, "|");
                                String q = pze.nextToken();
                                String w = pze.nextToken();
                                if (c.equals(q)) {
                                    n1.addItem(w);
                                }

                            }

                        } catch (Exception error) {

                        }
                    }

                }
            } catch (Exception error) {

            }
        }
        String h11 = t4.getText();
        String m11 = t5.getText();
        int x1 = 0;
        int y = 0;
        String comb = "" + n1.getSelectedItem();
        String ds = format.format(date1);
        int hr1 = Integer.parseInt(h11);
        int min1 = Integer.parseInt(m11);
        try {
            FileReader stud = new FileReader("Volunteer checkin.txt");
            BufferedReader studa = new BufferedReader(stud);
            String no = "";
            while ((no = studa.readLine()) != null) {
                StringTokenizer pz = new StringTokenizer(no, "|");
                String i = pz.nextToken();
                String e = pz.nextToken();
                int h2 = Integer.parseInt(pz.nextToken());
                int min2 = Integer.parseInt(pz.nextToken());
                Date e1 = format.parse(e);
                try {
                    FileReader stude = new FileReader("Volunteers.txt");
                    BufferedReader studae = new BufferedReader(stude);
                    String noe = "";
                    while ((noe = studae.readLine()) != null) {
                        StringTokenizer pze = new StringTokenizer(noe, "|");
                        String q = pze.nextToken();
                        String w = pze.nextToken();
                        if (i.equals(q)) {
                            if (w.equals(comb)) {
                                if (ds.equals(e)) {
                                    if (min1 >= min2) {
                                        x1 = hr1 - h2;
                                        y = min1 - min2;

                                    }
                                    if (min1 < min2) {
                                        x1 = (hr1 - h2) - 1;
                                        y = (min1 + 60) - min2;

                                    }
                                }
                            }
                        }
                    }
                } catch (Exception error) {

                }

            }
        } catch (Exception error) {

        }

        h.setText(String.valueOf(x1));
        min.setText(String.valueOf(y));

        if (h11.equals("") || m11.equals("")) {
            h.setText("");
            min.setText("");

        }
        /// TODO add your handling code here
    }//GEN-LAST:event_nameKeyReleased

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String na = "" + n1.getSelectedItem();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Date da12 = new Date();
        String da1 = format.format(da12);
        String t = t4.getText();
        String oclock = t5.getText();
        String hr = h.getText();
        String min1 = min.getText();

        String done = work.getText();
        String x = "";
        boolean er = false;
        boolean err = false;
        try {
            FileReader stud = new FileReader("Volunteer checkout.txt");
            BufferedReader studa = new BufferedReader(stud);
            String no = "";
            while ((no = studa.readLine()) != null) {
                StringTokenizer pz = new StringTokenizer(no, "|");
                String i = pz.nextToken();
                String e = pz.nextToken();
                if (e.equals(da1)) {
                    try {
                        FileReader stude = new FileReader("Volunteers.txt");
                        BufferedReader studae = new BufferedReader(stude);
                        String noe = "";
                        while ((noe = studae.readLine()) != null) {
                            StringTokenizer pze = new StringTokenizer(noe, "|");
                            String ie = pze.nextToken();
                            String ee = pze.nextToken();
                            if (ie.equals(i)){
                            if (ee.equals(na)) {
                                err = true;
                                javax.swing.JOptionPane.showMessageDialog(null, "This volunteer has already checked out!!", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);

                            }
                        }}
                    } catch (Exception error) {

                    }
                }
            }
        } catch (Exception error) {

        }

        if (na.equals("Select Volunteer")) {
            er = true;
            nam.setText("* Name:");
            nam.setForeground(Color.red);
        }

        if (t.equals("") || oclock.equals("")) {
            er = true;
            te.setText("* Time Ended (24hr clock):");
            te.setForeground(Color.red);
        }
        if (done.equals("")) {
            er = true;
            wd.setText("* Work done:");
            wd.setForeground(Color.red);
        }
        if (er == true) {
            javax.swing.JOptionPane.showMessageDialog(null, "Please complete all fields", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        if (er == false&& err==false) {
            try {
                FileReader stud = new FileReader("Volunteers.txt");
                BufferedReader studa = new BufferedReader(stud);
                String no = "";
                while ((no = studa.readLine()) != null) {
                    StringTokenizer pz = new StringTokenizer(no, "|");
                    String i = pz.nextToken();
                    String e = pz.nextToken();
                    if (na.equals(e)) {
                        x = i;
                    }
                }
            } catch (Exception error) {

            }
            try {
                FileWriter cat = new FileWriter("Volunteer checkout.txt", true);
                PrintWriter cat1 = new PrintWriter(cat);
                cat1.println(x + "|" + da1 + "|" + t + "|" + oclock + "|" + hr + "|" + min1 + "|" + done);

                cat1.close();
            } catch (Exception error) {

            }
            name.setText("");
            n1.removeAllItems();
            n1.addItem("Select Volunteer");
            try {
                FileReader tid = new FileReader("Volunteer checkin.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no1 = "";
                while ((no1 = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no1, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    Date p = format.parse(d);
                    if (d.equals(da1)) {
                        try {
                            FileReader stude = new FileReader("Volunteers.txt");
                            BufferedReader studae = new BufferedReader(stude);
                            String noe = "";
                            while ((noe = studae.readLine()) != null) {
                                StringTokenizer pze = new StringTokenizer(noe, "|");
                                String q = pze.nextToken();
                                String w = pze.nextToken();
                                if (c.equals(q)) {
                                    n1.addItem(w);
                                }

                            }

                        } catch (Exception error) {

                        }

                    }

                }
            } catch (Exception errer) {

            }

            h.setText("");
            min.setText("");
            work.setText("");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void t4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t4ActionPerformed

    private void t4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t4FocusGained
        te.setText("Time Ended (24hr clock):");
        te.setForeground(Color.black);          // TODO add your handling code here:
    }//GEN-LAST:event_t4FocusGained

    private void t5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t5ActionPerformed

    private void t5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t5FocusGained
        te.setText("Time Ended (24hr clock):");
        te.setForeground(Color.black);           // TODO add your handling code here:
    }//GEN-LAST:event_t5FocusGained

    private void t4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t4KeyReleased

    }//GEN-LAST:event_t4KeyReleased

    private void t5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t5KeyReleased
    }//GEN-LAST:event_t5KeyReleased

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained
    name.setText("");
    name.setForeground(Color.black);         nam.setText("Name:");
        nam.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_nameFocusGained

    private void n1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_n1FocusGained
        nam.setText("Name:");
        nam.setForeground(Color.black);
    }//GEN-LAST:event_n1FocusGained

    private void workFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_workFocusGained
        wd.setText("Work done:");
        wd.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_workFocusGained

    private void daFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_daFocusGained

    }//GEN-LAST:event_daFocusGained

    private void n1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_n1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_n1PropertyChange

    private void workKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_workKeyReleased
String t = work.getText();
        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        work.setText(x+y);  
        }// TODO add your handling code here:
    }//GEN-LAST:event_workKeyReleased

    private void nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusLost
if ((name.getText()).equals("")){
    name.setText("Search");
    name.setForeground(Color.lightGray);}         // TODO add your handling code here:
    }//GEN-LAST:event_nameFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField da;
    private javax.swing.JLabel da2;
    private javax.swing.JTextField h;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField min;
    private javax.swing.JComboBox n1;
    private javax.swing.JLabel nam;
    private javax.swing.JTextField name;
    private javax.swing.JTextField t4;
    private javax.swing.JTextField t5;
    private javax.swing.JLabel te;
    private javax.swing.JLabel wd;
    private javax.swing.JTextField work;
    // End of variables declaration//GEN-END:variables
}
