
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vidhi
 */

/* This form will allow the user to input the data of each dog in the Kennel. 
   It will save all the data of each dog along with the ID of the dog which is automatically generated (primary key)
*/

public class newdog extends javax.swing.JPanel {

    /**
     * Creates new form newdog
     */
    public newdog() {
        initComponents();
        pic.setEditable(false);
        date.setVisible(false);
        d.setVisible(false);
        date1.setVisible(false);
        d1.setVisible(false);
        det.setVisible(false);
        de.setVisible(false);
        num1.setVisible(false);
        num2.setVisible(false);
        t1.setVisible(false);
        t2.setVisible(false);
        t3.setVisible(false);
        t4.setVisible(false);
        t5.setVisible(false);
        t6.setVisible(false);
        t7.setVisible(false);
        t8.setVisible(false);
        num.setEditable(false);

        try {
            FileReader idf = new FileReader("dogid.txt");
            BufferedReader idFile = new BufferedReader(idf);
            int idg = Integer.parseInt(idFile.readLine());
            idg = idg + 1;
            num.setText("" + idg);
        } catch (Exception error) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jToggleButton1 = new javax.swing.JToggleButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        k = new javax.swing.JLabel();
        g = new javax.swing.JLabel();
        num = new javax.swing.JTextField();
        ed = new com.toedter.calendar.JDateChooser();
        dob = new com.toedter.calendar.JDateChooser();
        j = new javax.swing.JLabel();
        m = new javax.swing.JRadioButton();
        f = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        pic = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        a = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        bre = new javax.swing.JLabel();
        col = new javax.swing.JLabel();
        breed = new javax.swing.JTextField();
        color = new javax.swing.JTextField();
        si = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        s = new javax.swing.JRadioButton();
        me = new javax.swing.JRadioButton();
        l = new javax.swing.JRadioButton();
        q4 = new javax.swing.JLabel();
        q5 = new javax.swing.JLabel();
        q6 = new javax.swing.JLabel();
        q1 = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        q2 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        det = new javax.swing.JLabel();
        q3 = new javax.swing.JLabel();
        num2 = new javax.swing.JLabel();
        pe = new javax.swing.JLabel();
        hi = new javax.swing.JLabel();
        y1 = new javax.swing.JRadioButton();
        n1 = new javax.swing.JRadioButton();
        d = new com.toedter.calendar.JDateChooser();
        y2 = new javax.swing.JRadioButton();
        n2 = new javax.swing.JRadioButton();
        d1 = new com.toedter.calendar.JDateChooser();
        de = new javax.swing.JTextField();
        y3 = new javax.swing.JRadioButton();
        n3 = new javax.swing.JRadioButton();
        num1 = new javax.swing.JTextField();
        y4 = new javax.swing.JRadioButton();
        n4 = new javax.swing.JRadioButton();
        n6 = new javax.swing.JRadioButton();
        y6 = new javax.swing.JRadioButton();
        y5 = new javax.swing.JRadioButton();
        n5 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        his = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        per = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        ke = new javax.swing.JLabel();
        ken = new javax.swing.JTextField();
        abcd = new javax.swing.JComboBox();
        t2 = new javax.swing.JRadioButton();
        t1 = new javax.swing.JRadioButton();
        t3 = new javax.swing.JRadioButton();
        t4 = new javax.swing.JRadioButton();
        t7 = new javax.swing.JRadioButton();
        t5 = new javax.swing.JRadioButton();
        t8 = new javax.swing.JRadioButton();
        t6 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/Rajul/Downloads/logo.gif")); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Chalkboard SE", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Add a new dog to the system");

        b.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        b.setText("Name:");

        k.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        k.setText("Date of Birth:");

        g.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        g.setText("Gender:");

        num.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        num.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numFocusGained(evt);
            }
        });

        ed.setDateFormatString("dd/MM/yyyy");
        ed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edFocusGained(evt);
            }
        });
        ed.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edPropertyChange(evt);
            }
        });

        dob.setDateFormatString("dd/MM/yyyy");
        dob.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dobFocusGained(evt);
            }
        });
        dob.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dobPropertyChange(evt);
            }
        });

        j.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        j.setText("Entry Date:");

        buttonGroup1.add(m);
        m.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        m.setText("Male");
        m.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mFocusGained(evt);
            }
        });
        m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mActionPerformed(evt);
            }
        });

        buttonGroup1.add(f);
        f.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        f.setText("Female");
        f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        jButton1.setText("Upload dog's photo");
        jButton1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton1FocusGained(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        pic.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        pic.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                picFocusGained(evt);
            }
        });
        pic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        a.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        a.setText("ID Number:");

        name.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
        });
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
        });

        bre.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        bre.setText("Breed:");

        col.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        col.setText("Color:");

        breed.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        breed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                breedFocusGained(evt);
            }
        });
        breed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                breedKeyReleased(evt);
            }
        });

        color.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        color.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                colorFocusGained(evt);
            }
        });
        color.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                colorKeyReleased(evt);
            }
        });

        si.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        si.setText("Size:");

        jLabel8.setFont(new java.awt.Font("Chalkboard", 0, 18)); // NOI18N
        jLabel8.setText("Basic Information");

        jLabel13.setFont(new java.awt.Font("Chalkboard", 0, 18)); // NOI18N
        jLabel13.setText("Additional Details");

        buttonGroup2.add(s);
        s.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        s.setText("S");
        s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sActionPerformed(evt);
            }
        });

        buttonGroup2.add(me);
        me.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        me.setText("M");
        me.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meActionPerformed(evt);
            }
        });

        buttonGroup2.add(l);
        l.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        l.setText("L");
        l.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lActionPerformed(evt);
            }
        });

        q4.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        q4.setText("Is the dog okay with other dogs? ");

        q5.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        q5.setText("Is the dog okay with cats?");

        q6.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        q6.setText("Is the dog okay with kids?");

        q1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        q1.setText("Has the dog been neutered?");

        date.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        date.setText("Date:");

        q2.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        q2.setText("Has the dog been vaccinated?");

        date1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        date1.setText("Date:");

        det.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        det.setText("Details:");

        q3.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        q3.setText("Has the dog been microchipped?");

        num2.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        num2.setText("Number:");

        pe.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        pe.setText("Personality:");

        hi.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        hi.setText("History:");

        buttonGroup3.add(y1);
        y1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        y1.setText("Yes");
        y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y1ActionPerformed(evt);
            }
        });

        buttonGroup3.add(n1);
        n1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        n1.setText("No");
        n1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n1ActionPerformed(evt);
            }
        });

        d.setDateFormatString("dd/MM/yyyy");
        d.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dFocusGained(evt);
            }
        });
        d.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dPropertyChange(evt);
            }
        });

        buttonGroup4.add(y2);
        y2.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        y2.setText("Yes");
        y2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y2ActionPerformed(evt);
            }
        });

        buttonGroup4.add(n2);
        n2.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        n2.setText("No");
        n2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n2ActionPerformed(evt);
            }
        });

        d1.setDateFormatString("dd/MM/yyyy");
        d1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                d1FocusGained(evt);
            }
        });
        d1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                d1PropertyChange(evt);
            }
        });

        de.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        de.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                deFocusGained(evt);
            }
        });
        de.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deKeyReleased(evt);
            }
        });

        buttonGroup5.add(y3);
        y3.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        y3.setText("Yes");
        y3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y3ActionPerformed(evt);
            }
        });

        buttonGroup5.add(n3);
        n3.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        n3.setText("No");
        n3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n3ActionPerformed(evt);
            }
        });

        num1.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        num1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                num1FocusGained(evt);
            }
        });
        num1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num1ActionPerformed(evt);
            }
        });

        buttonGroup6.add(y4);
        y4.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        y4.setText("Yes");
        y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y4ActionPerformed(evt);
            }
        });

        buttonGroup6.add(n4);
        n4.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        n4.setText("No");
        n4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n4ActionPerformed(evt);
            }
        });

        buttonGroup8.add(n6);
        n6.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        n6.setText("No");
        n6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n6ActionPerformed(evt);
            }
        });

        buttonGroup8.add(y6);
        y6.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        y6.setText("Yes");
        y6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y6ActionPerformed(evt);
            }
        });

        buttonGroup7.add(y5);
        y5.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        y5.setText("Yes");
        y5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y5ActionPerformed(evt);
            }
        });

        buttonGroup7.add(n5);
        n5.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        n5.setText("No");
        n5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n5ActionPerformed(evt);
            }
        });

        his.setColumns(20);
        his.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        his.setRows(5);
        his.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                hisFocusGained(evt);
            }
        });
        his.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hisKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(his);

        per.setColumns(20);
        per.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        per.setRows(5);
        per.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                perFocusGained(evt);
            }
        });
        per.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                perKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(per);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        ke.setText("Kennel:");

        ken.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kenFocusGained(evt);
            }
        });

        abcd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D" }));

        buttonGroup2.add(t2);
        t2.setText("a");

        buttonGroup1.add(t1);
        t1.setText("b");

        buttonGroup3.add(t3);
        t3.setText("c");

        buttonGroup4.add(t4);
        t4.setText("d");

        buttonGroup5.add(t7);
        t7.setText("e");

        buttonGroup7.add(t5);
        t5.setText("f");

        buttonGroup8.add(t8);
        t8.setText("g");

        buttonGroup6.add(t6);
        t6.setText("h");

        jButton3.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel4.setText("Details of the New Dog");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jButton2)
                        .addGap(38, 38, 38)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(a)
                                        .addComponent(k, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(j)
                                        .addComponent(g)
                                        .addComponent(bre)
                                        .addComponent(col)
                                        .addComponent(si)
                                        .addComponent(ke)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                    .addComponent(b)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t1)
                                    .addComponent(t3))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(t2))
                                    .addComponent(t4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(6, 6, 6)
                                        .addComponent(t7))
                                    .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(m)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(f))
                                    .addComponent(breed, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(s)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(me)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(l))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ken, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(abcd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(pic, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addComponent(t6)
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel13)
                                        .addGap(27, 27, 27)
                                        .addComponent(t5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(q1)
                                        .addGap(58, 58, 58)
                                        .addComponent(y1)
                                        .addGap(6, 6, 6)
                                        .addComponent(n1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(date)
                                        .addGap(18, 18, 18)
                                        .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(q2)
                                        .addGap(45, 45, 45)
                                        .addComponent(y2)
                                        .addGap(6, 6, 6)
                                        .addComponent(n2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(date1)
                                        .addGap(18, 18, 18)
                                        .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68)
                                        .addComponent(t8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(det)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(de, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(num2)
                                        .addGap(12, 12, 12)
                                        .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(q6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(y6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(q5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(y5))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(q4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(y4))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(q3)
                                                .addGap(33, 33, 33)
                                                .addComponent(y3)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addComponent(n3))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGap(5, 5, 5)
                                                        .addComponent(n4)))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGap(5, 5, 5)
                                                    .addComponent(n5)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(n6))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(212, 212, 212)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hi)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pe)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(217, 217, 217))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ed, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(t1)
                                        .addGap(10, 10, 10)
                                        .addComponent(t3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(t2)
                                        .addGap(6, 6, 6)
                                        .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(t6)
                                            .addComponent(t5))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(q1))
                                    .addComponent(y1)
                                    .addComponent(n1))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(y2)
                                    .addComponent(n2)
                                    .addComponent(q2))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(t8)))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(det)
                                    .addComponent(de, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(q3))
                                    .addComponent(y3)
                                    .addComponent(n3))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(num2)
                                    .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(q4))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(n4)
                                        .addComponent(y4)))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(q5))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(n5)
                                        .addComponent(y5)))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(q6))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(n6)
                                        .addComponent(y6)))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pe)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hi)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(75, 75, 75)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(k, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(ed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(m)
                                                    .addComponent(f)
                                                    .addComponent(g))
                                                .addGap(21, 21, 21)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(bre)
                                                    .addComponent(breed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(t7)))
                                        .addGap(18, 18, 18)
                                        .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(b))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(col))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(l)
                                    .addComponent(me, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(s)
                                    .addComponent(si))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ke)
                                    .addComponent(ken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(abcd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(0, 591, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        pic.setText(filename);
        pic.setBackground(Color.white);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void y1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y1ActionPerformed
        if (y1.isSelected()) {
            date.setVisible(true);
            d.setVisible(true);
        }
        q1.setForeground(Color.black);
        q1.setText("Has the dog been neutered?");


    }//GEN-LAST:event_y1ActionPerformed

    private void n3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n3ActionPerformed
        if (n3.isSelected()) {
            num1.setVisible(false);
            num2.setVisible(false);
            q3.setForeground(Color.black);
            q3.setText("Has the dog been microchipped?");

}    }//GEN-LAST:event_n3ActionPerformed

    private void n4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n4ActionPerformed
        q4.setForeground(Color.black);
        q4.setText("Is the dog okay with other dogs?");

        // TODO add your handling code here:
    }//GEN-LAST:event_n4ActionPerformed

    private void n6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n6ActionPerformed
        q6.setForeground(Color.black);
        q6.setText("Is the dog okay with kids?");

        // TODO add your handling code here:
    }//GEN-LAST:event_n6ActionPerformed

    private void n5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n5ActionPerformed
        q5.setForeground(Color.black);
        q5.setText("Is the dog okay with cats?");

        // TODO add your handling code here:
    }//GEN-LAST:event_n5ActionPerformed

    private void n1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n1ActionPerformed
        if (n1.isSelected()) {
            date.setVisible(false);
            d.setVisible(false);
        }
        q1.setForeground(Color.black);
        q1.setText("Has the dog been neutered?");


    }//GEN-LAST:event_n1ActionPerformed

    private void y2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y2ActionPerformed
        if (y2.isSelected()) {
            date1.setVisible(true);
            d1.setVisible(true);
            det.setVisible(true);
            de.setVisible(true);
        }
        q2.setForeground(Color.black);
        q2.setText("Has the dog been vaccinated?");

    }//GEN-LAST:event_y2ActionPerformed

    private void y3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y3ActionPerformed
        if (y3.isSelected()) {
            num1.setVisible(true);
            num2.setVisible(true);
        }
        q3.setForeground(Color.black);
        q3.setText("Has the dog been microchipped?");

    }//GEN-LAST:event_y3ActionPerformed

    private void n2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n2ActionPerformed
        q2.setForeground(Color.black);
        if (n2.isSelected()) {
            date1.setVisible(false);
            d1.setVisible(false);
            det.setVisible(false);
            de.setVisible(false);
        }
        q2.setForeground(Color.black);
        q2.setText("Has the dog been vaccinated?");


    }//GEN-LAST:event_n2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String na = name.getText();
        String idtosave = num.getText();

        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Date dpb = dob.getDate();
        Date epb = ed.getDate();
        String br = breed.getText();
        String co = color.getText();
        String kennel = ken.getText();
        String ab = "" + abcd.getSelectedItem();
        String picture = pic.getText();
        String pers = per.getText();
        String history = his.getText();
        boolean err = false;
        boolean erro = false;
        int p = 0;
        if (!(kennel.equals(""))){
        try {
            FileReader dogs = new FileReader("New Dogs.txt");
            BufferedReader newdogs = new BufferedReader(dogs);
            String no = "";
            while ((no = newdogs.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String w = ot.nextToken();
                String w1 = ot.nextToken();
                String w2 = ot.nextToken();
                String w3 = ot.nextToken();
                String w4 = ot.nextToken();
                String w5 = ot.nextToken();
                String w6 = ot.nextToken();
                String w7 = ot.nextToken();
                String w8 = ot.nextToken();
                String w9 = ot.nextToken();
                if (w9.equals((kennel+ab))){
                    p = p+1;
                }

            }

        } catch (Exception err1) {

        }
        
        if (p > 1){
            erro = true;
           javax.swing.JOptionPane.showMessageDialog(null, "KENNEL IS FULL!", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);
           ke.setText("* Kennel:");
           ke.setForeground(Color.red);
            
        }
        if ((Integer.parseInt(kennel)>15)){
            erro = true; 
            javax.swing.JOptionPane.showMessageDialog(null, "Kennel does not exist!", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);
           ke.setText("* Kennel:");
           ke.setForeground(Color.red);
        }
        }
        if (dpb == null) {
            err = true;
            k.setText("* Date of birth:");
            k.setForeground(Color.red);
        }
        if (epb == null) {
            err = true;
            j.setText("* Entry Date:");
            j.setForeground(Color.red);
        }
        if (na.equals("")) {
            err = true;
            b.setText("* Name:");
            b.setForeground(Color.red);
        }

        

        if (!(m.isSelected() || f.isSelected())) {
            err = true;
            g.setText("* Gender:");
            g.setForeground(Color.red);

        }
        if (br.equals("")) {
            err = true;
            bre.setText("* Breed:");
            bre.setForeground(Color.red);
        }
        if (co.equals("")) {
            err = true;
            col.setText("* Color:");
            col.setForeground(Color.red);
        }

        if (!(s.isSelected() || me.isSelected() || l.isSelected())) {
            err = true;
            si.setText("* Size:");
            si.setForeground(Color.red);

        }
        if (kennel.equals("")) {
            err = true;
            ke.setText("* Kennel:");
            ke.setForeground(Color.red);
        }
        if (picture.equals("")) {
            err = true;
            pic.setBackground(Color.red);

        }
        if (!(y1.isSelected() || n1.isSelected())) {
            err = true;
            q1.setText("* Has the dog been neutered?");
            q1.setForeground(Color.red);

        }
        if (!(y2.isSelected() || n2.isSelected())) {
            err = true;
            q2.setText("* Has the dog been vaccinated?");
            q2.setForeground(Color.red);

        }
        if (!(y3.isSelected() || n3.isSelected())) {
            err = true;
            q3.setText("* Has the dog been microchipped?");
            q3.setForeground(Color.red);
        }
        if (!(y4.isSelected() || n4.isSelected())) {
            err = true;
            q4.setText("* Is the dog okay with other dogs? ");
            q4.setForeground(Color.red);
        }
        if (!(y5.isSelected() || n5.isSelected())) {
            err = true;
            q5.setText("* Is the dog okay with cats? ");
            q5.setForeground(Color.red);
        }
        if (!(y6.isSelected() || n6.isSelected())) {
            err = true;
            q6.setText("* Is the dog okay with kids? ");
            q6.setForeground(Color.red);
        }

        if (y1.isSelected()) {
            if ((d.getDate()) == null) {
                err = true;
                date.setText("* Date: ");
                date.setForeground(Color.red);

            }

        }
        if (y2.isSelected()) {
            if ((d1.getDate()) == null) {
                err = true;
                date1.setText("* Date: ");
                date1.setForeground(Color.red);

            }

            if ((de.getText().equals(""))) {
                err = true;
                det.setText("* Details: ");
                det.setForeground(Color.red);

            }
        }
        if ((y3.isSelected()) && ((num1.getText()).equals(""))) {
            err = true;
            num2.setText("* Number: ");
            num2.setForeground(Color.red);

        }
        if (pers.equals("")) {
            err = true;
            pe.setText("* Personality: ");
            pe.setForeground(Color.red);
        }

        if (history.equals("")) {
            err = true;
            hi.setText("* History: ");
            hi.setForeground(Color.red);
        }
        if (err == true) {
            javax.swing.JOptionPane.showMessageDialog(null, "Please complete all fields", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);

        }

        if (err == false&& erro==false) {
            String db = format.format(dpb);
            String entry = format.format(epb);

            try {
                FileWriter newd = new FileWriter("New Dogs.txt", true);
                PrintWriter newdog = new PrintWriter(newd);

                if (m.isSelected()) {
                    if (s.isSelected()) {
                        newdog.println(idtosave + "|" + na + "|" + db + "|" + entry + "|" + "male" + "|" + br + "|" + co + "|" + "small" + "|" + kennel + ab + "|" + pers + "|" + history + "|" + picture);
                    }
                    if (me.isSelected()) {
                        newdog.println(idtosave + "|" + na + "|" + db + "|" + entry + "|" + "male" + "|" + br + "|" + co + "|" + "medium" + "|" + kennel + ab + "|" + pers + "|" + history + "|" + picture);
                    }
                    if (l.isSelected()) {
                        newdog.println(idtosave + "|" + na + "|" + db + "|" + entry + "|"  + "male" + "|" + br + "|" + co + "|" + "large" + "|" + kennel + ab + "|" + pers + "|" + history + "|" + picture);
                    }

                }
                if (f.isSelected()) {
                    if (s.isSelected()) {
                        newdog.println(idtosave + "|" + na + "|" + db + "|" + entry + "|"+ "female" + "|" + br + "|" + co + "|" + "small" + "|" + kennel + ab + "|" + pers + "|" + history + "|" + picture);
                    }
                    if (me.isSelected()) {
                        newdog.println(idtosave + "|" + na + "|" + db + "|" + entry + "|" + "female" + "|" + br + "|" + co + "|" + "medium" + "|" + kennel + ab + "|" + pers + "|" + history + "|" + picture);
                    }
                    if (l.isSelected()) {
                        newdog.println(idtosave + "|" + na + "|" + db + "|" + entry + "|" + "female" + "|" + br + "|" + co + "|" + "large" + "|" + kennel + ab + "|" + pers + "|" + history + "|" + picture);
                    }

                }
                newdog.close();
                FileWriter ids = new FileWriter("dogid.txt", false);
                PrintWriter idsave = new PrintWriter(ids);
                idsave.println(idtosave);
                idsave.close();

                try {
                    FileReader idf = new FileReader("dogid.txt");
                    BufferedReader idFile = new BufferedReader(idf);
                    int idg = Integer.parseInt(idFile.readLine());
                    idg = idg + 1;
                    num.setText("" + idg);
                    idFile.close();
                } catch (Exception error) {

                }

            } catch (Exception error) {

            }
            try {
                FileWriter neu = new FileWriter("Neuteredandnot.txt", true);
                PrintWriter neuter = new PrintWriter(neu);
                if (n1.isSelected()) {
                    neuter.println(idtosave + "|" + "no");
                }
                if (y1.isSelected()) {
                    String da = format.format(d.getDate());
                    neuter.println(idtosave + "|" + "yes" + "|" + da);
                }
                neuter.close();
            } catch (Exception error) {

            }
            try {
                FileWriter vac = new FileWriter("Vaccinatedandnot.txt", true);
                PrintWriter vaccin = new PrintWriter(vac);
                if (n2.isSelected()) {
                    vaccin.println(idtosave + "|" + "no");
                }
                if (y2.isSelected()) {
                    String da1 = format.format(d1.getDate());;
                    String deta = de.getText();
                    vaccin.println(idtosave + "|" + "yes" + "|" + da1 + "|" + deta);
                }
                vaccin.close();
            } catch (Exception error) {

            }
            try {
                FileWriter mic = new FileWriter("Microchippedandnot.txt", true);
                PrintWriter micro = new PrintWriter(mic);
                if (n3.isSelected()) {
                    micro.println(idtosave + "|" + "no");
                }
                if (y3.isSelected()) {
                    String nu = num1.getText();
                    micro.println(idtosave + "|" + "yes" + "|" + nu);
                }
                micro.close();
            } catch (Exception error) {

            }
            try {
                FileWriter dog = new FileWriter("dogs.txt", true);
                PrintWriter dog1 = new PrintWriter(dog);
                if (n4.isSelected()) {
                    dog1.println(idtosave + "|" + "no");
                }
                if (y4.isSelected()) {
                    dog1.println(idtosave + "|" + "yes");
                }
                dog1.close();
            } catch (Exception error) {

            }
            try {
                FileWriter cat = new FileWriter("cats.txt", true);
                PrintWriter cat1 = new PrintWriter(cat);
                if (n5.isSelected()) {
                    cat1.println(idtosave + "|" + "no");
                }
                if (y5.isSelected()) {
                    cat1.println(idtosave + "|" + "yes");
                }
                cat1.close();
            } catch (Exception error) {

            }
            try {
                FileWriter kid = new FileWriter("kids.txt", true);
                PrintWriter kid1 = new PrintWriter(kid);
                if (n6.isSelected()) {
                    kid1.println(idtosave + "|" + "no");
                }
                if (y6.isSelected()) {
                    kid1.println(idtosave + "|" + "yes");
                }
                kid1.close();
            } catch (Exception error) {

            }
            name.setText("");
            dob.setDate(null);
            ed.setDate(null);
            breed.setText("");
            color.setText("");
            ken.setText("");
            abcd.removeAllItems();
            abcd.addItem("A");
            abcd.addItem("B");
            abcd.addItem("C");
            abcd.addItem("D");
            pic.setText("");
            t1.setSelected(true);
            t2.setSelected(true);
            t3.setSelected(true);
            t4.setSelected(true);
            t5.setSelected(true);
            t6.setSelected(true);
            t7.setSelected(true);
            t8.setSelected(true);
            det.setText("");
            num1.setText("");
            d.setDate(null);
            d1.setDate(null);
            per.setText("");
            his.setText("");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        name.setText("");
        dob.setDate(null);
        ed.setDate(null);
        breed.setText("");
        color.setText("");
        ken.setText("");
        abcd.removeAllItems();
        abcd.addItem("A");
        abcd.addItem("B");
        abcd.addItem("C");
        abcd.addItem("D");
        pic.setText("");
        t1.setSelected(true);
        t2.setSelected(true);
        t3.setSelected(true);
        t4.setSelected(true);
        t5.setSelected(true);
        t6.setSelected(true);
        t7.setSelected(true);
        t8.setSelected(true);
        det.setText("");
        num1.setText("");
        d.setDate(null);
        d1.setDate(null);
        per.setText("");
            his.setText("");    }//GEN-LAST:event_jButton3ActionPerformed

    private void numFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numFocusGained
        num.setBackground(Color.white);
        // TODO add your handling code here:
    }//GEN-LAST:event_numFocusGained

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained
        b.setForeground(Color.black);
        b.setText("Name:");
    }//GEN-LAST:event_nameFocusGained

    private void breedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_breedFocusGained
        bre.setForeground(Color.black);
        bre.setText("Breed:");

    }//GEN-LAST:event_breedFocusGained

    private void colorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_colorFocusGained
        col.setForeground(Color.black);
        col.setText("Color:");

        // TODO add your handling code here:
    }//GEN-LAST:event_colorFocusGained

    private void kenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kenFocusGained
        ke.setForeground(Color.black);
        ke.setText("Kennel:");

    }//GEN-LAST:event_kenFocusGained

    private void picFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_picFocusGained
        pic.setBackground(Color.white);
        // TODO add your handling code here:
    }//GEN-LAST:event_picFocusGained

    private void deFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deFocusGained
        det.setForeground(Color.black);
        det.setText(("Details:"));
        // TODO add your handling code here:
    }//GEN-LAST:event_deFocusGained

    private void num1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_num1FocusGained
        num2.setForeground(Color.black);
        // TODO add your handling code here:
        num2.setText("Number:");

    }//GEN-LAST:event_num1FocusGained

    private void perFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_perFocusGained
        pe.setForeground(Color.black);
        pe.setText("Personality:");
        // TODO add your handling code here:
    }//GEN-LAST:event_perFocusGained

    private void hisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hisFocusGained
        hi.setForeground(Color.black);
        hi.setText("History:");

        // TODO add your handling code here:
    }//GEN-LAST:event_hisFocusGained

    private void picActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_picActionPerformed

    private void dobFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dobFocusGained
        k.setForeground(Color.black);
    }//GEN-LAST:event_dobFocusGained

    private void edFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edFocusGained
        j.setForeground(Color.black);
    }//GEN-LAST:event_edFocusGained

    private void mFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mFocusGained
        g.setForeground(Color.black);
        g.setText("Gender:");
    }//GEN-LAST:event_mFocusGained

    private void fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fActionPerformed
        g.setForeground(Color.black);
        g.setText("Gender:");

    }//GEN-LAST:event_fActionPerformed

    private void sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sActionPerformed
        si.setForeground(Color.black);
        si.setText("Size:");

        // TODO add your handling code here:
    }//GEN-LAST:event_sActionPerformed

    private void meActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meActionPerformed
        si.setForeground(Color.black);
        si.setText("Size:");

        // TODO add your handling code here:
    }//GEN-LAST:event_meActionPerformed

    private void lActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lActionPerformed
        si.setForeground(Color.black);
        si.setText("Size:");

// TODO add your handling code here:
    }//GEN-LAST:event_lActionPerformed

    private void dFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dFocusGained
        date.setForeground(Color.black);
    }//GEN-LAST:event_dFocusGained

    private void d1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_d1FocusGained
date1.setForeground(Color.black);    }//GEN-LAST:event_d1FocusGained

    private void num1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_num1ActionPerformed

    private void y4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y4ActionPerformed
        q4.setForeground(Color.black);
        q4.setText("Is the dog okay with other dogs?");
        // TODO add your handling code here:
    }//GEN-LAST:event_y4ActionPerformed

    private void y5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y5ActionPerformed
        q5.setForeground(Color.black);
        q5.setText("Is the dog okay with cats?");

        // TODO add your handling code here:
    }//GEN-LAST:event_y5ActionPerformed

    private void y6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y6ActionPerformed
        q6.setForeground(Color.black);
        q6.setText("Is the dog okay with kids?");

        // TODO add your handling code here:
    }//GEN-LAST:event_y6ActionPerformed

    private void dobPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dobPropertyChange
        k.setForeground(Color.black);
        k.setText("Date of Birth:");
    }//GEN-LAST:event_dobPropertyChange

    private void edPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edPropertyChange
        j.setForeground(Color.black);
        j.setText("Entry Date:");
        // TODO add your handling code here:
    }//GEN-LAST:event_edPropertyChange

    private void d1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_d1PropertyChange
        date1.setForeground(Color.black);
        date1.setText("Date:");
        // TODO add your handling code here:
    }//GEN-LAST:event_d1PropertyChange

    private void dPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dPropertyChange
        date.setForeground(Color.black);
        date.setText("Date:");
        // TODO add your handling code here:
    }//GEN-LAST:event_dPropertyChange

    private void mActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mActionPerformed

    private void jButton1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton1FocusGained
        pic.setBackground(Color.white);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1FocusGained

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased

        String t = name.getText();
        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        name.setText(x+y);
        }


    }//GEN-LAST:event_nameKeyReleased

    private void breedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_breedKeyReleased
String t = breed.getText();
        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        breed.setText(x+y);
        }
    }//GEN-LAST:event_breedKeyReleased

    private void colorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colorKeyReleased
String t = color.getText();

        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        color.setText(x+y);
        }
    }//GEN-LAST:event_colorKeyReleased

    private void deKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deKeyReleased
String t = de.getText();
        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        de.setText(x+y);    }//GEN-LAST:event_deKeyReleased
}
    private void perKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_perKeyReleased
String t = per.getText();
        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        per.setText(x+y);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_perKeyReleased

    private void hisKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hisKeyReleased
String t = his.getText();
        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        his.setText(x+y);    }//GEN-LAST:event_hisKeyReleased

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel a;
    private javax.swing.JComboBox abcd;
    private javax.swing.JLabel b;
    private javax.swing.JLabel bre;
    private javax.swing.JTextField breed;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.JLabel col;
    private javax.swing.JTextField color;
    private com.toedter.calendar.JDateChooser d;
    private com.toedter.calendar.JDateChooser d1;
    private javax.swing.JLabel date;
    private javax.swing.JLabel date1;
    private javax.swing.JTextField de;
    private javax.swing.JLabel det;
    private com.toedter.calendar.JDateChooser dob;
    private com.toedter.calendar.JDateChooser ed;
    private javax.swing.JRadioButton f;
    private javax.swing.JLabel g;
    private javax.swing.JLabel hi;
    private javax.swing.JTextArea his;
    private javax.swing.JLabel j;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel k;
    private javax.swing.JLabel ke;
    private javax.swing.JTextField ken;
    private javax.swing.JRadioButton l;
    private javax.swing.JRadioButton m;
    private javax.swing.JRadioButton me;
    private javax.swing.JRadioButton n1;
    private javax.swing.JRadioButton n2;
    private javax.swing.JRadioButton n3;
    private javax.swing.JRadioButton n4;
    private javax.swing.JRadioButton n5;
    private javax.swing.JRadioButton n6;
    private javax.swing.JTextField name;
    private javax.swing.JTextField num;
    private javax.swing.JTextField num1;
    private javax.swing.JLabel num2;
    private javax.swing.JLabel pe;
    private javax.swing.JTextArea per;
    private javax.swing.JTextField pic;
    private javax.swing.JLabel q1;
    private javax.swing.JLabel q2;
    private javax.swing.JLabel q3;
    private javax.swing.JLabel q4;
    private javax.swing.JLabel q5;
    private javax.swing.JLabel q6;
    private javax.swing.JRadioButton s;
    private javax.swing.JLabel si;
    private javax.swing.JRadioButton t1;
    private javax.swing.JRadioButton t2;
    private javax.swing.JRadioButton t3;
    private javax.swing.JRadioButton t4;
    private javax.swing.JRadioButton t5;
    private javax.swing.JRadioButton t6;
    private javax.swing.JRadioButton t7;
    private javax.swing.JRadioButton t8;
    private javax.swing.JRadioButton y1;
    private javax.swing.JRadioButton y2;
    private javax.swing.JRadioButton y3;
    private javax.swing.JRadioButton y4;
    private javax.swing.JRadioButton y5;
    private javax.swing.JRadioButton y6;
    // End of variables declaration//GEN-END:variables
}
