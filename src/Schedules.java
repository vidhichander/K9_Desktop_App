
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vidhi
 */

/* This form will allow the user to choose/enter the name of a dog in the system and update the data of the dogâ€™s socialization, grooming, and bathing. 
   Once the name is chosen in the form, the last entered data of the dog will appear, and can be edited and saved.  
*/

public class Schedules extends javax.swing.JPanel {

    schedule stu[] = new schedule[1000];

    /**
     * Creates new form bathing
     */
    public Schedules() {
        initComponents();
        nacombo.removeAllItems();
        nacombo.addItem("Select Dog");
        try {
            FileReader dogs = new FileReader("New Dogs.txt");
            BufferedReader newdogs = new BufferedReader(dogs);
            String no = "";
            while ((no = newdogs.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();

                nacombo.addItem(d);

            }

        } catch (Exception err) {

        }
        c1.removeAllItems();
        c2.removeAllItems();
        c3.removeAllItems();

        c1.addItem("Select Volunteer");
        c2.addItem("Select Volunteer");
        c3.addItem("Select Volunteer");

        try {
            FileReader vol = new FileReader("Volunteers.txt");
            BufferedReader voldata = new BufferedReader(vol);
            String no = "";
            while ((no = voldata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();

                String d = ot.nextToken();
                c1.addItem(d);
                c2.addItem(d);
                c3.addItem(d);

            }

        } catch (Exception err) {

        }
        t4.setVisible(false);
        t5.setVisible(false);
        t6.setVisible(false);
        t4.setSelected(true);
        t5.setSelected(true);
        t6.setSelected(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        na1 = new javax.swing.JLabel();
        nacombo = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ls = new javax.swing.JLabel();
        vo1 = new javax.swing.JLabel();
        d1 = new com.toedter.calendar.JDateChooser();
        c1 = new javax.swing.JComboBox();
        v1 = new javax.swing.JTextField();
        d2 = new com.toedter.calendar.JDateChooser();
        lb = new javax.swing.JLabel();
        vo3 = new javax.swing.JLabel();
        v2 = new javax.swing.JTextField();
        c2 = new javax.swing.JComboBox();
        v3 = new javax.swing.JTextField();
        c3 = new javax.swing.JComboBox();
        vo2 = new javax.swing.JLabel();
        lg = new javax.swing.JLabel();
        d3 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        na = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        t2 = new javax.swing.JRadioButton();
        t3 = new javax.swing.JRadioButton();
        t1 = new javax.swing.JRadioButton();
        t4 = new javax.swing.JRadioButton();
        t5 = new javax.swing.JRadioButton();
        t6 = new javax.swing.JRadioButton();

        jLabel2.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel2.setText("Details of the New Dog");

        jLabel1.setText("jLabel1");

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel3.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel3.setText("Necessities and Schedules");

        na1.setFont(new java.awt.Font("Chalkboard", 0, 13)); // NOI18N
        na1.setText("Name of the dog:");

        nacombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nacomboFocusGained(evt);
            }
        });
        nacombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nacomboActionPerformed(evt);
            }
        });
        nacombo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                nacomboPropertyChange(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel6.setFont(new java.awt.Font("Chalkboard", 1, 16)); // NOI18N
        jLabel6.setText("Socializing");

        jLabel7.setFont(new java.awt.Font("Chalkboard", 1, 16)); // NOI18N
        jLabel7.setText("Bathing");

        jLabel8.setFont(new java.awt.Font("Chalkboard", 1, 16)); // NOI18N
        jLabel8.setText("Grooming");

        ls.setFont(new java.awt.Font("Chalkboard", 0, 13)); // NOI18N
        ls.setText("Last Socialized:");

        vo1.setFont(new java.awt.Font("Chalkboard", 0, 13)); // NOI18N
        vo1.setText("Volunteer:");

        d1.setDateFormatString("dd/MM/yyyy");
        d1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                d1PropertyChange(evt);
            }
        });

        c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                c1FocusGained(evt);
            }
        });
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        c1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                c1PropertyChange(evt);
            }
        });
        c1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                c1KeyReleased(evt);
            }
        });

        v1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        v1.setForeground(java.awt.Color.lightGray);
        v1.setText("Search");
        v1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                v1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                v1FocusLost(evt);
            }
        });
        v1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v1ActionPerformed(evt);
            }
        });
        v1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                v1KeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                v1KeyReleased(evt);
            }
        });

        d2.setDateFormatString("dd/MM/yyyy");
        d2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                d2PropertyChange(evt);
            }
        });

        lb.setFont(new java.awt.Font("Chalkboard", 0, 13)); // NOI18N
        lb.setText("Last Bathed:");

        vo3.setFont(new java.awt.Font("Chalkboard", 0, 13)); // NOI18N
        vo3.setText("Volunteer:");

        v2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        v2.setForeground(java.awt.Color.lightGray);
        v2.setText("Search");
        v2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                v2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                v2FocusLost(evt);
            }
        });
        v2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v2ActionPerformed(evt);
            }
        });
        v2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                v2KeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                v2KeyReleased(evt);
            }
        });

        c2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                c2FocusGained(evt);
            }
        });
        c2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                c2PropertyChange(evt);
            }
        });

        v3.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        v3.setForeground(java.awt.Color.lightGray);
        v3.setText("Search");
        v3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                v3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                v3FocusLost(evt);
            }
        });
        v3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v3ActionPerformed(evt);
            }
        });
        v3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                v3KeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                v3KeyReleased(evt);
            }
        });

        c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                c3FocusGained(evt);
            }
        });
        c3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                c3PropertyChange(evt);
            }
        });

        vo2.setFont(new java.awt.Font("Chalkboard", 0, 13)); // NOI18N
        vo2.setText("Volunteer:");

        lg.setFont(new java.awt.Font("Chalkboard", 0, 13)); // NOI18N
        lg.setText("Last Groomed:");

        d3.setDateFormatString("dd/MM/yyyy");
        d3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                d3PropertyChange(evt);
            }
        });

        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        na.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        na.setForeground(java.awt.Color.lightGray);
        na.setText("Search");
        na.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                naFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                naFocusLost(evt);
            }
        });
        na.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                naMouseEntered(evt);
            }
        });
        na.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naActionPerformed(evt);
            }
        });
        na.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                naKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                naKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                naKeyReleased(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon("/Users/Rajul/Downloads/logo.gif")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Chalkboard SE", 2, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("Ensure that each dog's necessities are taken care of ");

        buttonGroup2.add(t2);
        t2.setText("Today");
        t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t2ActionPerformed(evt);
            }
        });

        buttonGroup3.add(t3);
        t3.setText("Today");
        t3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(t1);
        t1.setText("Today");
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(t4);
        t4.setText("Today");
        t4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t4ActionPerformed(evt);
            }
        });

        buttonGroup2.add(t5);
        t5.setText("Today");
        t5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t5ActionPerformed(evt);
            }
        });

        buttonGroup3.add(t6);
        t6.setText("Today");
        t6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(146, 146, 146)
                                .addComponent(t4))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(116, 116, 116)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(na1)
                                        .addGap(12, 12, 12)
                                        .addComponent(na, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(t5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(t6))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(nacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(vo1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(v1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(6, 6, 6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(94, 94, 94)
                                                .addComponent(jLabel6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(ls)
                                                .addGap(7, 7, 7)
                                                .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(12, 12, 12))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(t1)
                                .addGap(60, 60, 60)))
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(88, 88, 88)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(vo3)
                                        .addGap(18, 18, 18)
                                        .addComponent(v3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(80, 80, 80)
                                        .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lg)
                                        .addGap(14, 14, 14)
                                        .addComponent(d3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t2)
                                .addGap(52, 52, 52)))
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lb)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel7))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(vo2)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(v2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(t3)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(t4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel4)
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(na1))
                                    .addComponent(na, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(t5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t6)))))
                .addGap(9, 9, 9)
                .addComponent(nacombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(lb, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel7)
                                .addGap(6, 6, 6)
                                .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(v2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vo2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ls, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(vo1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(t1)
                                .addGap(8, 8, 8)
                                .addComponent(v1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel8)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lg, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(vo3))
                            .addComponent(v3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jButton1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void v1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v1ActionPerformed

    private void v2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v2ActionPerformed

    private void v3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v3ActionPerformed

    private void naKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_naKeyTyped

    }//GEN-LAST:event_naKeyTyped

    private void nacomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nacomboActionPerformed
        String ncom = "" + nacombo.getSelectedItem();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        int index = 0;
        String qqp = "";
        String qpq = "";
        String qtp = "";
        if (ncom.equals("Select Dog")) {

            d1.setDate(null);
            d2.setDate(null);
            d3.setDate(null);
           
            c1.removeAllItems();
            c2.removeAllItems();
            c3.removeAllItems();

            c1.addItem("Select Volunteer");
            c2.addItem("Select Volunteer");
            c3.addItem("Select Volunteer");

            try {
                FileReader vol = new FileReader("Volunteers.txt");
                BufferedReader vdata = new BufferedReader(vol);
                String no = "";
                while ((no = vdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();

                    String d = ot.nextToken();
                    c1.addItem(d);
                    c2.addItem(d);
                    c3.addItem(d);

                }

            } catch (Exception err) {

            }
        }

        try {
            FileReader dog = new FileReader("New Dogs.txt");
            BufferedReader dogg = new BufferedReader(dog);
            String on = "";
            while ((on = dogg.readLine()) != null) {
                StringTokenizer pe = new StringTokenizer(on, "|");
                String q = pe.nextToken();
                String w = pe.nextToken();
                if (w.equals(ncom)) {
                    try {
                        FileReader sched = new FileReader("Schedules.txt");
                        BufferedReader schedule = new BufferedReader(sched);
                        String no = "";
                        while ((no = schedule.readLine()) != null) {
                            StringTokenizer pz = new StringTokenizer(no, "|");
                            String f = pz.nextToken();
                            String g = pz.nextToken();
                            String h = pz.nextToken();
                            String l = pz.nextToken();
                            String m = pz.nextToken();
                            String n = pz.nextToken();
                            String o = pz.nextToken();

                            if (f.equals(q)) {

                                try {
                                    FileReader vol = new FileReader("Volunteers.txt");
                                    BufferedReader volu = new BufferedReader(vol);
                                    String na = "";
                                    while ((na = volu.readLine()) != null) {
                                        StringTokenizer pt = new StringTokenizer(na, "|");
                                        String r = pt.nextToken();
                                        String t = pt.nextToken();
                                        if (r.equals(h)) {
                                            qqp = t;
                                        }
                                        if (r.equals(m)) {
                                            qtp = t;
                                        }
                                        if (r.equals(o)) {
                                            qpq = t;
                                        }

                                    }
                                } catch (Exception error) {

                                }
                                schedule x = new schedule(g, l, n, ncom, qqp, qtp, qpq);
                                stu[index] = x;
                                d1.setDate(format.parse(x.getDate1()));
                                v1.setText(x.getVol1());

                                d3.setDate(format.parse(x.getDate2()));
                                v3.setText(x.getVol2());

                                d2.setDate(format.parse(x.getDate3()));
                                v2.setText(x.getVol3());
                                index++;

                            }
                            
                        }
                    } catch (Exception error) {

                    }
                }
            }
        } catch (Exception error) {

        }
        String az = v1.getText();
        String ax = v2.getText();
        String ac = v3.getText();
        c1.setSelectedItem(az);
        c2.setSelectedItem(ax);
        c3.setSelectedItem(ac);


    }//GEN-LAST:event_nacomboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Date ds1 = d1.getDate();
        Date db1 = d2.getDate();
        Date dg1 = d3.getDate();
        String x = "";
        String y = "";
        String z = "";
        String v = "";
        schedule p = null;
        String cs = "" + c1.getSelectedItem();
        String cb = "" + c2.getSelectedItem();
        String cg = "" + c3.getSelectedItem();
        String name1 = "" + nacombo.getSelectedItem();
        boolean er = false;
        if (name1.equals(("Select Dog"))) {
            er = true;
            na1.setText("* Name of the dog:");
            na1.setForeground(Color.red);
        }
        if (cs.equals("Select Volunteer")) {
            er = true;
            vo1.setText("* Volunteer:");
            vo1.setForeground(Color.red);
        }
        if (cb.equals("Select Volunteer")) {
            er = true;
            vo2.setText("* Volunteer:");
            vo2.setForeground(Color.red);
        }
        if (cg.equals("Select Volunteer")) {
            er = true;
            vo3.setText("* Volunteer:");
            vo3.setForeground(Color.red);
        }
        if (ds1 == null) {
            er = true;
            ls.setText("* Last Socialized:");
            ls.setForeground(Color.red);
        }
        if (db1 == null) {
            er = true;
            lb.setText("* Last Bathed:");
            lb.setForeground(Color.red);
        }
        if (dg1 == null) {
            er = true;
            lg.setText("* Last Groomed:");
            lg.setForeground(Color.red);
        }
        if (er == true) {
            javax.swing.JOptionPane.showMessageDialog(null, "Please complete all fields", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        if (er == false) {
            String ds = format.format(ds1);
            String db = format.format(db1);
            String dg = format.format(dg1);

            try {
                FileReader dog = new FileReader("New Dogs.txt");
                BufferedReader dogs = new BufferedReader(dog);
                String no = "";
                while ((no = dogs.readLine()) != null) {
                    StringTokenizer pz = new StringTokenizer(no, "|");
                    String o = pz.nextToken();
                    String g = pz.nextToken();
                    if (name1.equals(g)) {
                        x = o;
                    }
                }

            } catch (Exception error) {

            }
            try {
                FileReader vol = new FileReader("Volunteers.txt");
                BufferedReader voldata = new BufferedReader(vol);
                String no = "";
                while ((no = voldata.readLine()) != null) {
                    StringTokenizer pz = new StringTokenizer(no, "|");
                    String i = pz.nextToken();
                    String e = pz.nextToken();
                    if (cs.equals(e)) {
                        y = i;
                    }
                    if (cb.equals(e)) {
                        z = i;
                    }
                    if (cg.equals(e)) {
                        v = i;
                    }
                }

            } catch (Exception error) {

            }

            try {
                FileWriter sched = new FileWriter("Schedules.txt", true);
                PrintWriter schedules = new PrintWriter(sched);
                p = new schedule(ds, dg, db, x, y, v, z);
                schedules.println(p.getName() + "|" + p.getDate1() + "|" + p.getVol1() + "|" + p.getDate2() + "|" + p.getVol2() + "|" + p.getDate3() + "|" + p.getVol3());

                try {
                    FileReader schedu = new FileReader("Schedules.txt");
                    BufferedReader schedul = new BufferedReader(schedu);
                    String no = "";
                    while ((no = schedul.readLine()) != null) {
                        StringTokenizer pz = new StringTokenizer(no, "|");
                        String f = pz.nextToken();
                        String g = pz.nextToken();
                        String h = pz.nextToken();
                        String l = pz.nextToken();
                        String m = pz.nextToken();
                        String n = pz.nextToken();
                        String o = pz.nextToken();

                        if (f.equals(x)) {

                            p = new schedule(ds, dg, db, x, y, v, z);
                            FileWriter soca = new FileWriter("Schedules.txt", false);

                        } else if (!(f.equals(x))) {

                            p = new schedule(g, l, n, f, h, m, o);
                            FileWriter soca = new FileWriter("Schedules.txt", false);
                            schedules.println(p.getName() + "|" + p.getDate1() + "|" + p.getVol1() + "|" + p.getDate2() + "|" + p.getVol2() + "|" + p.getDate3() + "|" + p.getVol3());

                        }

                    }
                    schedules.close();
                } catch (Exception error) {

                }
            } catch (Exception error) {

            }
            d1.setDate(null);
            d2.setDate(null);
            d3.setDate(null);
            v1.setText("");
            v2.setText("");
            v3.setText("");
            c1.removeAllItems();
            c2.removeAllItems();
            c3.removeAllItems();
            t4.setSelected(true);
            t5.setSelected(true);
            t6.setSelected(true);
            c1.addItem("Select Volunteer");
            c2.addItem("Select Volunteer");
            c3.addItem("Select Volunteer");

            try {
                FileReader vol = new FileReader("Volunteers.txt");
                BufferedReader vdata = new BufferedReader(vol);
                String nop = "";
                while ((nop = vdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(nop, "|");
                    String c = ot.nextToken();

                    String d = ot.nextToken();
                    c1.addItem(d);
                    c2.addItem(d);
                    c3.addItem(d);

                }

            } catch (Exception err) {

            }
            nacombo.removeAllItems();
            nacombo.addItem("Select Dog");
            try {
                FileReader dog = new FileReader("New Dogs.txt");
                BufferedReader dogs = new BufferedReader(dog);
                String no = "";
                while ((no = dogs.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    nacombo.addItem(d);

                }

            } catch (Exception err) {

            }
            na.setText("");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void v1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_v1KeyTyped


    }//GEN-LAST:event_v1KeyTyped

    private void v2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_v2KeyTyped
    }//GEN-LAST:event_v2KeyTyped

    private void v3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_v3KeyTyped
    }//GEN-LAST:event_v3KeyTyped

    private void naKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_naKeyPressed
     }//GEN-LAST:event_naKeyPressed

    private void naKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_naKeyReleased
        String n = na.getText();
        int le = n.length();
        nacombo.removeAllItems();

        String x = "";
        try {
            FileReader dog = new FileReader("New Dogs.txt");
            BufferedReader dogs = new BufferedReader(dog);
            String no = "";
            while ((no = dogs.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();

                x = "";
                for (int i = 0; i < le; i++) {
                    x = x + d.substring(i, i + 1);

                    if ((x).equals(n) || x.toUpperCase().equals(n) || x.toLowerCase().equals(n)) {
                        nacombo.addItem(d);
                    }

                }

            }
        } catch (Exception err) {

        }
        if (n.equals("")) {
            nacombo.removeAllItems();
            nacombo.addItem("Select Dog");
            try {
                FileReader dog = new FileReader("New Dogs.txt");
                BufferedReader dogs = new BufferedReader(dog);
                String no = "";
                while ((no = dogs.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();

                    String d = ot.nextToken();

                    nacombo.addItem(d);
                }

            } catch (Exception err) {

            }

            d1.setDate(null);
            d2.setDate(null);
            d3.setDate(null);
            v1.setText("");
            v2.setText("");
            v3.setText("");
            c1.removeAllItems();
            c2.removeAllItems();
            c3.removeAllItems();

            c1.addItem("Select Volunteer");
            c2.addItem("Select Volunteer");
            c3.addItem("Select Volunteer");

            try {
                FileReader vol = new FileReader("Volunteers.txt");
                BufferedReader volun = new BufferedReader(vol);
                String no = "";
                while ((no = volun.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();

                    String d = ot.nextToken();
                    c1.addItem(d);
                    c2.addItem(d);
                    c3.addItem(d);

                }

            } catch (Exception err) {

            }

        }
    }//GEN-LAST:event_naKeyReleased

    private void c1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_c1KeyReleased

    private void v1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_v1KeyReleased
        c1.removeAllItems();
        String v = v1.getText();
        int le = v.length();

        String x = "";
        try {
            FileReader vol = new FileReader("Volunteers.txt");
            BufferedReader vdata = new BufferedReader(vol);
            String no = "";
            while ((no = vdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();

                x = "";
                for (int i = 0; i < le; i++) {
                    x = x + d.substring(i, i + 1);

                    if ((x).equals(v) || x.toUpperCase().equals(v) || x.toLowerCase().equals(v)) {
                        c1.addItem(d);
                    }

                }

            }
        } catch (Exception err) {

        }
        if (v.equals("")) {
            c1.removeAllItems();
            c1.addItem("Select Volunteer");
            try {
                FileReader vol = new FileReader("Volunteers.txt");
                BufferedReader vdata = new BufferedReader(vol);
                String no = "";
                while ((no = vdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    c1.addItem(d);
                }

            } catch (Exception err) {

            }
        }    }//GEN-LAST:event_v1KeyReleased

    private void v2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_v2KeyReleased
        c2.removeAllItems();
        String v = v2.getText();
        int le = v.length();

        String x = "";
        try {
            FileReader vol = new FileReader("Volunteers.txt");
            BufferedReader volun = new BufferedReader(vol);
            String no = "";
            while ((no = volun.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();
                x = "";
                for (int i = 0; i < le; i++) {
                    x = x + d.substring(i, i + 1);

                    if ((x).equals(v) || x.toUpperCase().equals(v) || x.toLowerCase().equals(v)) {
                        c2.addItem(d);
                    }

                }

            }
        } catch (Exception err) {

        }
        if (v.equals("")) {
            c2.removeAllItems();
            c2.addItem("Select Volunteer");
            try {
                FileReader vol = new FileReader("Volunteers.txt");
                BufferedReader volun = new BufferedReader(vol);
                String no = "";
                while ((no = volun.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    c2.addItem(d);
                }

            } catch (Exception err) {

            }
        }    }//GEN-LAST:event_v2KeyReleased

    private void v3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_v3KeyReleased
        c3.removeAllItems();
        String v = v3.getText();
        int le = v.length();

        String x = "";
        try {
            FileReader vol = new FileReader("Volunteers.txt");
            BufferedReader volun = new BufferedReader(vol);
            String no = "";
            while ((no = volun.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();
                x = "";
                for (int i = 0; i < le; i++) {
                    x = x + d.substring(i, i + 1);

                    if ((x).equals(v) || x.toUpperCase().equals(v) || x.toLowerCase().equals(v)) {
                        c3.addItem(d);
                    }

                }

            }
        } catch (Exception err) {

        }
        if (v.equals("")) {
            c3.removeAllItems();
            c3.addItem("Select Volunteer");
            try {
                FileReader vol = new FileReader("Volunteers.txt");
                BufferedReader volun = new BufferedReader(vol);
                String no = "";
                while ((no = volun.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    c3.addItem(d);
                }

            } catch (Exception err) {

            }
        }    }//GEN-LAST:event_v3KeyReleased

    private void naActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_naActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void naMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_naMouseEntered
    }//GEN-LAST:event_naMouseEntered

    private void nacomboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_nacomboPropertyChange

    }//GEN-LAST:event_nacomboPropertyChange

    private void naFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_naFocusGained
        na1.setForeground(Color.black);
        na1.setText("Name of the dog:");
        na.setText("");
        na.setForeground(Color.black);

    }//GEN-LAST:event_naFocusGained

    private void d1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_d1PropertyChange
        ls.setForeground(Color.black);
        ls.setText("Last Socialized:");
    }//GEN-LAST:event_d1PropertyChange

    private void d3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_d3PropertyChange
        lg.setForeground(Color.black);
        lg.setText("Last Groomed:");
    }//GEN-LAST:event_d3PropertyChange

    private void d2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_d2PropertyChange
        lb.setForeground(Color.black);
        lb.setText("Last Bathed:");        // TODO add your handling code here:
    }//GEN-LAST:event_d2PropertyChange

    private void v1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v1FocusGained
        vo1.setForeground(Color.black);
        vo1.setText("Volunteer:");
          v1.setText("");
        v1.setForeground(Color.black);
// TODO add your handling code here:
    }//GEN-LAST:event_v1FocusGained

    private void v3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v3FocusGained
        vo3.setForeground(Color.black);
        vo3.setText("Volunteer:");  
        v3.setText("");
        v3.setForeground(Color.black);// TODO add your handling code here:
    }//GEN-LAST:event_v3FocusGained

    private void v2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v2FocusGained
v2.setText("");
        v2.setForeground(Color.black);        vo2.setForeground(Color.black);
        vo2.setText("Volunteer:");
    }//GEN-LAST:event_v2FocusGained

    private void c1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_c1PropertyChange

        // TODO add your handling code here:
    }//GEN-LAST:event_c1PropertyChange

    private void c3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_c3PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_c3PropertyChange

    private void c2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_c2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_c2PropertyChange

    private void nacomboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nacomboFocusGained
        na1.setForeground(Color.black);
        na1.setText("Name of the dog:");        // TODO add your handling code here:
    }//GEN-LAST:event_nacomboFocusGained

    private void c1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c1FocusGained
        vo1.setForeground(Color.black);
        vo1.setText("Volunteer:");        // TODO add your handling code here:
    }//GEN-LAST:event_c1FocusGained

    private void c3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c3FocusGained
        vo3.setForeground(Color.black);
        vo3.setText("Volunteer:");          // TODO add your handling code here:
    }//GEN-LAST:event_c3FocusGained

    private void c2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c2FocusGained
        vo2.setForeground(Color.black);
        vo2.setText("Volunteer:");           // TODO add your handling code here:
    }//GEN-LAST:event_c2FocusGained

    private void t2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t2ActionPerformed
        Date date1 = new Date();
        d3.setDate(date1);        // TODO add your handling code here:
    }//GEN-LAST:event_t2ActionPerformed

    private void t3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t3ActionPerformed
        Date date1 = new Date();
        d2.setDate(date1);        // TODO add your handling code here:
    }//GEN-LAST:event_t3ActionPerformed

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        Date date1 = new Date();
        d1.setDate(date1);
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    private void t4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t4ActionPerformed

    private void t5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t5ActionPerformed

    private void t6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t6ActionPerformed

    private void naFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_naFocusLost
if ((na.getText()).equals("")){
    na.setText("Search");
    na.setForeground(Color.lightGray);
}
        
        
    }//GEN-LAST:event_naFocusLost

    private void v1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v1FocusLost
if ((v1.getText()).equals("")){
    v1.setText("Search");
    v1.setForeground(Color.lightGray);}        // TODO add your handling code here:
    }//GEN-LAST:event_v1FocusLost

    private void v3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v3FocusLost
if ((v3.getText()).equals("")){
    v3.setText("Search");
    v3.setForeground(Color.lightGray);}        // TODO add your handling code here:
    }//GEN-LAST:event_v3FocusLost

    private void v2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v2FocusLost
if ((v2.getText()).equals("")){
    v2.setText("Search");
    v2.setForeground(Color.lightGray);}        // TODO add your handling code here:
    }//GEN-LAST:event_v2FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox c1;
    private javax.swing.JComboBox c2;
    private javax.swing.JComboBox c3;
    private com.toedter.calendar.JDateChooser d1;
    private com.toedter.calendar.JDateChooser d2;
    private com.toedter.calendar.JDateChooser d3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lb;
    private javax.swing.JLabel lg;
    private javax.swing.JLabel ls;
    private javax.swing.JTextField na;
    private javax.swing.JLabel na1;
    private javax.swing.JComboBox nacombo;
    private javax.swing.JRadioButton t1;
    private javax.swing.JRadioButton t2;
    private javax.swing.JRadioButton t3;
    private javax.swing.JRadioButton t4;
    private javax.swing.JRadioButton t5;
    private javax.swing.JRadioButton t6;
    private javax.swing.JTextField v1;
    private javax.swing.JTextField v2;
    private javax.swing.JTextField v3;
    private javax.swing.JLabel vo1;
    private javax.swing.JLabel vo2;
    private javax.swing.JLabel vo3;
    // End of variables declaration//GEN-END:variables
}
