
import java.io.BufferedReader;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.concurrent.TimeUnit;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vidhi
 */
/* This form will allow the user to search for dogs in the system. 
   They may either search for all the data per dog, or carry out a specific search by choosing a preferred size, color, breed etc. 
 */
public class dogreport extends javax.swing.JPanel {

    DefaultTableModel model;

    /**
     * Creates new form dogreport
     */
    public dogreport() {
        initComponents();
        basis.removeAllItems();
        spec.removeAllItems();
        basis1.removeAllItems();
        spec1.removeAllItems();
        basis2.removeAllItems();
        spec2.removeAllItems();
        basis3.removeAllItems();
        spec3.removeAllItems();
        spec.setVisible(false);
        basis.setVisible(true);
        spec1.setVisible(false);
        basis1.setVisible(false);
        spec2.setVisible(false);
        basis2.setVisible(false);
        spec3.setVisible(false);
        basis3.setVisible(false);
        button.setVisible(false);
        button1.setVisible(false);
        button2.setVisible(false);
        model = (DefaultTableModel) tab.getModel();
        //tab.setEnabled(false);
        model.setRowCount(0);
        model.setColumnCount(0);
        tab.setVisible(false);
        basis.addItem("Basis of Search");
        basis.addItem("Age");
        basis.addItem("Gender");
        basis.addItem("Size");
        basis.addItem("Level of friendliness");
        basis.addItem("Adopted dogs");
        basis.addItem("All data per dogs in Kennel");
        tab.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        img = new javax.swing.JLabel();
        basis = new javax.swing.JComboBox<>();
        spec = new javax.swing.JComboBox<>();
        spec1 = new javax.swing.JComboBox<>();
        basis1 = new javax.swing.JComboBox<>();
        basis2 = new javax.swing.JComboBox<>();
        spec2 = new javax.swing.JComboBox<>();
        basis3 = new javax.swing.JComboBox<>();
        spec3 = new javax.swing.JComboBox<>();
        button = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setIcon(new javax.swing.ImageIcon("/Users/Rajul/Downloads/logo.gif")); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel3.setText("Search Engine");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Chalkboard SE", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Specify your search basis and find any dog in the system");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        tab.setGridColor(new java.awt.Color(204, 204, 204));
        tab.setShowGrid(true);
        jScrollPane1.setViewportView(tab);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 109, 501, 327));
        add(img, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, 500, 200));

        basis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        basis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basisActionPerformed(evt);
            }
        });
        add(basis, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 109, 255, -1));

        spec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        spec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specActionPerformed(evt);
            }
        });
        add(spec, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 142, 255, -1));

        spec1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        spec1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spec1ActionPerformed(evt);
            }
        });
        add(spec1, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 251, 255, -1));

        basis1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        basis1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basis1ActionPerformed(evt);
            }
        });
        add(basis1, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 218, 255, -1));

        basis2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        basis2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basis2ActionPerformed(evt);
            }
        });
        add(basis2, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 325, 255, -1));

        spec2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        spec2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spec2ActionPerformed(evt);
            }
        });
        add(spec2, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 358, 255, -1));

        basis3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        basis3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basis3ActionPerformed(evt);
            }
        });
        add(basis3, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 432, 255, -1));

        spec3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        spec3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spec3ActionPerformed(evt);
            }
        });
        add(spec3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 465, 255, -1));

        button.setText("+ Add new search basis");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        add(button, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 181, -1, 25));

        button1.setText("+ Add new search basis");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        add(button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 290, -1, 23));

        button2.setText("+ Add new search basis");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });
        add(button2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 397, -1, 23));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        basis1.setVisible(true);
        String ba = "" + basis.getSelectedItem();
        basis1.removeAllItems();
        basis1.addItem("Basis of Search");
        basis1.addItem("Age");
        basis1.addItem("Gender");
        basis1.addItem("Size");
        basis1.addItem("Level of friendliness");
        basis1.addItem("Adopted dogs");
        basis1.addItem("All data per dogs in Kennel");
        basis1.removeItem(ba);

    }//GEN-LAST:event_buttonActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        basis2.setVisible(true);
        String ba = "" + basis.getSelectedItem();
        String ba1 = "" + basis1.getSelectedItem();
        basis2.removeAllItems();
        basis2.addItem("Basis of Search");
        basis2.addItem("Age");
        basis2.addItem("Gender");
        basis2.addItem("Size");
        basis2.addItem("Level of friendliness");
        basis2.addItem("Adopted dogs");
        basis2.addItem("All data per dogs in Kennel");
        basis2.removeItem(ba);
        basis2.removeItem(ba1);
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        basis3.setVisible(true);
        String ba = "" + basis.getSelectedItem();
        String ba1 = "" + basis1.getSelectedItem();
        String ba2 = "" + basis2.getSelectedItem();

        basis3.removeAllItems();
        basis3.addItem("Basis of Search");
        basis3.addItem("Age");
        basis3.addItem("Gender");
        basis3.addItem("Size");
        basis3.addItem("Level of friendliness");
        basis3.addItem("Adopted dogs");
        basis3.addItem("All data per dogs in Kennel");
        basis3.removeItem(ba);
        basis3.removeItem(ba1);
        basis3.removeItem(ba2);

    }//GEN-LAST:event_button2ActionPerformed

    private void basisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basisActionPerformed

        tab.setVisible(false);
        String ba = "" + basis.getSelectedItem();
        if (ba.equals("Basis of Search")) {
            model.setColumnCount(0);

            spec.setVisible(false);

        }
        if (ba.equals("Age")) {
            model.setColumnCount(0);

            spec.setVisible(true);
            spec.removeAllItems();
            spec.addItem("Select Age Range");
            spec.addItem("Less than 1 month");
            spec.addItem("1 month - 1 year");
            spec.addItem("1 - 3 years");
            spec.addItem("4 - 7 years");
            spec.addItem("7 - 10 years");
            spec.addItem("More than 10 years");
        }
        if (ba.equals("Gender")) {
            model.setColumnCount(0);

            spec.setVisible(true);
            spec.removeAllItems();
            spec.addItem("Select Gender");
            spec.addItem("Male");
            spec.addItem("Female");
        }

        if (ba.equals("Size")) {
            model.setColumnCount(0);

            spec.setVisible(true);
            spec.removeAllItems();
            spec.addItem("Select Size");

            spec.addItem("Small");
            spec.addItem("Medium");
            spec.addItem("Large");
        }
        if (ba.equals("Level of friendliness")) {
            model.setColumnCount(0);

            spec.setVisible(true);
            spec.removeAllItems();
            spec.addItem("Select Preference");

            spec.addItem("Good with kids");
            spec.addItem("Good with cats");
            spec.addItem("Good with other dogs");

        }
        if (ba.equals("Adopted dogs")) {
            model.setColumnCount(0);

            spec.setVisible(true);
            spec.removeAllItems();
            spec.addItem("View All Dogs");
            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    spec.addItem(d);

                }

            } catch (Exception err) {

            }
        }
        if (ba.equals("All data per dogs in Kennel")) {
            model.setColumnCount(0);

            spec.setVisible(true);
            spec.removeAllItems();
            spec.addItem("View All Dogs");
            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    spec.addItem(d);

                }

            } catch (Exception err) {

            }

        }
        button.setVisible(false);
        spec1.setVisible(false);
        basis1.setVisible(false);
        spec2.setVisible(false);
        basis2.setVisible(false);
        button1.setVisible(false);
        button2.setVisible(false);
        spec3.setVisible(false);
        basis3.setVisible(false);
    }//GEN-LAST:event_basisActionPerformed

    private void specActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specActionPerformed
        String x = "" + spec.getSelectedItem();
        String y = "" + basis.getSelectedItem();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        if (y.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});
                                    
                                } else if (x.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y.equals("Level of friendliness")) {
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);
            img.setIcon(null);
            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");

            if (x.equals("Good with other dogs")) {

                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with cats")) {

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with kids")) {

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
            if (x.equals("Select Preference")) {
                model.setRowCount(0);
                tab.setVisible(false);
            }
        }
        if (y.equals("Size")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Small")) {
                        if (g.equals("small")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Medium")) {
                        if (g.equals("medium")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Large")) {
                        if (g.equals("large")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Gender")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Male")) {
                        if (d.equals("male")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Female")) {
                        if (d.equals("female")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Age")) {
            img.setIcon(null);
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();
                    Date dt1 = format.parse(a);
                    Date date1 = new Date();
                    String diff = "";
                    long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                    long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                    long difference = (hours1 / 24) + 1;
                    diff = String.format("%d", difference);
                    if (x.equals("Less than 1 month")) {
                        if (Integer.parseInt(diff) < 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("1 month - 1 year")) {
                        if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                    if (x.equals("1 - 3 years")) {
                        if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("4 - 7 years")) {
                        if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("7 - 10 years")) {
                        if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("More than 10 years")) {
                        if (Integer.parseInt(diff) > 3652.5) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }
        spec1.setVisible(false);
        basis1.setVisible(false);
        spec2.setVisible(false);
        basis2.setVisible(false);
        button1.setVisible(false);
        button2.setVisible(false);
        spec3.setVisible(false);
        basis3.setVisible(false);
        if (!y.equals("All data per dogs in Kennel") && !(y.equals("Adopted dogs"))) {
            button.setVisible(true);
        }


    }//GEN-LAST:event_specActionPerformed

    private void basis1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basis1ActionPerformed
        String ba = "" + basis1.getSelectedItem();
        if (ba.equals("Basis of Search")) {
            String x = "" + spec.getSelectedItem();
            String y = "" + basis.getSelectedItem();
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

            if (y.equals("All data per dogs in Kennel")) {
                tab.setVisible(true);
                model.setColumnCount(0);
                model.addColumn("ID Number");
                model.addColumn("Name");
                model.addColumn("Kennel");
                model.setRowCount(0);

                try {
                    FileReader tid = new FileReader("New Dogs.txt");
                    BufferedReader tdata = new BufferedReader(tid);
                    String no = "";
                    while ((no = tdata.readLine()) != null) {
                        StringTokenizer ot = new StringTokenizer(no, "|");
                        String c = ot.nextToken();
                        String d = ot.nextToken();
                        String e = ot.nextToken();
                        String f = ot.nextToken();
                        String h = ot.nextToken();
                        String i = ot.nextToken();
                        String j = ot.nextToken();
                        String k = ot.nextToken();
                        String l = ot.nextToken();
                        String m = ot.nextToken();
                        String n = ot.nextToken();
                        String o = ot.nextToken();

                        if (x.equals("View All Dogs")) {
                            model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                        } else if (x.equals(d)) {
                            model.setColumnCount(0);
                            model.setRowCount(0);
                            model.addColumn("Field");
                            model.addColumn("Data");
                            model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                            model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                            model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                            model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                            model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                            model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                            model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                            model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                            try {
                                FileReader tid1 = new FileReader("Neuteredandnot.txt");
                                BufferedReader tdata1 = new BufferedReader(tid1);
                                String no1 = "";
                                while ((no1 = tdata.readLine()) != null) {
                                    StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                    String c1 = ot1.nextToken();
                                    String d1 = ot1.nextToken();
                                    if (c1.equals(c)) {
                                        model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                        if (d1.equals("yes")) {
                                            String e1 = ot1.nextToken();
                                            model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }
                            try {
                                FileReader tid1 = new FileReader("Neuteredandnot.txt");
                                BufferedReader tdata1 = new BufferedReader(tid1);
                                String no1 = "";
                                while ((no1 = tdata1.readLine()) != null) {
                                    StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                    String c1 = ot1.nextToken();
                                    String d1 = ot1.nextToken();
                                    if (c1.equals(c)) {
                                        model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                        if (d1.equals("yes")) {
                                            String e1 = ot1.nextToken();
                                            model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }
                            try {
                                FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                                BufferedReader tdata1 = new BufferedReader(tid1);
                                String no1 = "";
                                while ((no1 = tdata1.readLine()) != null) {
                                    StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                    String c1 = ot1.nextToken();
                                    String d1 = ot1.nextToken();
                                    if (c1.equals(c)) {
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                        if (d1.equals("yes")) {
                                            String e1 = ot1.nextToken();
                                            String f1 = ot1.nextToken();
                                            model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                            model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }
                            try {
                                FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                BufferedReader tdata1 = new BufferedReader(tid1);
                                String no1 = "";
                                while ((no1 = tdata1.readLine()) != null) {
                                    StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                    String c1 = ot1.nextToken();
                                    String d1 = ot1.nextToken();
                                    if (c1.equals(c)) {
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                        if (d1.equals("yes")) {
                                            String e1 = ot1.nextToken();
                                            model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }
                            try {
                                FileReader tid1 = new FileReader("dogs.txt");
                                BufferedReader tdata1 = new BufferedReader(tid1);
                                String no1 = "";
                                while ((no1 = tdata1.readLine()) != null) {
                                    StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                    String c1 = ot1.nextToken();
                                    String d1 = ot1.nextToken();
                                    if (c1.equals(c)) {
                                        model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                    }
                                }

                            } catch (Exception err) {

                            }
                            try {
                                FileReader tid1 = new FileReader("cats.txt");
                                BufferedReader tdata1 = new BufferedReader(tid1);
                                String no1 = "";
                                while ((no1 = tdata1.readLine()) != null) {
                                    StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                    String c1 = ot1.nextToken();
                                    String d1 = ot1.nextToken();
                                    if (c1.equals(c)) {
                                        model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                    }
                                }

                            } catch (Exception err) {

                            }
                            try {
                                FileReader tid1 = new FileReader("kids.txt");
                                BufferedReader tdata1 = new BufferedReader(tid1);
                                String no1 = "";
                                while ((no1 = tdata1.readLine()) != null) {
                                    StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                    String c1 = ot1.nextToken();
                                    String d1 = ot1.nextToken();
                                    if (c1.equals(c)) {
                                        model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                    }
                                }

                            } catch (Exception err) {

                            }
                            model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                            model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                            ImageIcon icon = new ImageIcon(o, "");
                            img.setIcon(icon);

                        }
                    }
                } catch (Exception error) {
                }
            }
            if (y.equals("Adopted dogs")) {
                tab.setVisible(true);
                model.setColumnCount(0);
                model.addColumn("ID Number");
                model.addColumn("Name");
                model.addColumn("Adopted on");

                model.addColumn("Adopted by");
                model.addColumn("Address");
                model.addColumn("Mobile Number");
                model.addColumn("Email ID");

                model.setRowCount(0);

                try {
                    FileReader tid = new FileReader("Adopted dogs.txt");
                    BufferedReader tdata = new BufferedReader(tid);
                    String no = "";
                    while ((no = tdata.readLine()) != null) {
                        StringTokenizer ot = new StringTokenizer(no, "|");
                        String c = ot.nextToken();
                        String d = ot.nextToken();
                        String e = ot.nextToken();
                        String f = ot.nextToken();
                        String h = ot.nextToken();
                        String i = ot.nextToken();
                        String j = ot.nextToken();
                        String k = ot.nextToken();
                        String l = ot.nextToken();
                        String m = ot.nextToken();
                        String n = ot.nextToken();
                        String o = ot.nextToken();
                        try {
                            FileReader tid10 = new FileReader("Adopters.txt");
                            BufferedReader tdata10 = new BufferedReader(tid10);
                            String no10 = "";
                            while ((no10 = tdata10.readLine()) != null) {
                                StringTokenizer ot10 = new StringTokenizer(no10, "|");
                                String a1 = ot10.nextToken();
                                String d2 = ot10.nextToken();
                                String e2 = ot10.nextToken();
                                String f2 = ot10.nextToken();
                                String g1 = ot10.nextToken();
                                String h1 = ot10.nextToken();
                                if (a1.equals(d)) {

                                    if (x.equals("View All Dogs")) {
                                        model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                    } else if (x.equals(d)) {
                                        model.setColumnCount(0);
                                        model.setRowCount(0);
                                        model.addColumn("Field");
                                        model.addColumn("Data");
                                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                        model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                        try {
                                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                            BufferedReader tdata1 = new BufferedReader(tid1);
                                            String no1 = "";
                                            while ((no1 = tdata1.readLine()) != null) {
                                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                                String c1 = ot1.nextToken();
                                                String d1 = ot1.nextToken();
                                                if (c1.equals(c)) {
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                    if (d1.equals("yes")) {
                                                        String e1 = ot1.nextToken();
                                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                    }
                                                }
                                            }

                                        } catch (Exception err) {

                                        }

                                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                        ImageIcon icon = new ImageIcon(o, "");
                                        img.setIcon(icon);
                                        model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                        model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                        model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                        model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                    }
                                }
                            }
                        } catch (Exception error) {
                        }
                    }
                } catch (Exception error) {

                }

            }
            if (y.equals("Level of friendliness")) {
                tab.setVisible(true);
                model.setRowCount(0);
                model.setColumnCount(0);
                img.setIcon(null);
                model.addColumn("ID");
                model.addColumn("Name of Dog");
                model.addColumn("Kennel");

                if (x.equals("Good with other dogs")) {

                    try {
                        FileReader tid1 = new FileReader("dogs.txt");
                        BufferedReader tdata1 = new BufferedReader(tid1);
                        String no1 = "";
                        while ((no1 = tdata1.readLine()) != null) {
                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                            String c1 = ot1.nextToken();
                            String d1 = ot1.nextToken();
                            if (d1.equals("yes")) {
                                try {
                                    FileReader tod = new FileReader("New Dogs.txt");
                                    BufferedReader tdota = new BufferedReader(tod);
                                    String noo = "";
                                    while ((noo = tdota.readLine()) != null) {
                                        StringTokenizer oto = new StringTokenizer(noo, "|");
                                        String c2 = oto.nextToken();
                                        String d2 = oto.nextToken();
                                        String a = oto.nextToken();
                                        String c = oto.nextToken();
                                        String d = oto.nextToken();
                                        String e = oto.nextToken();
                                        String f = oto.nextToken();
                                        String g = oto.nextToken();
                                        String h = oto.nextToken();
                                        if (c2.equals(c1)) {
                                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                        }
                                    }

                                } catch (Exception err) {

                                }

                            }
                        }

                    } catch (Exception err) {

                    }
                }
                if (x.equals("Good with cats")) {

                    try {
                        FileReader tid1 = new FileReader("cats.txt");
                        BufferedReader tdata1 = new BufferedReader(tid1);
                        String no1 = "";
                        while ((no1 = tdata1.readLine()) != null) {
                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                            String c1 = ot1.nextToken();
                            String d1 = ot1.nextToken();
                            if (d1.equals("yes")) {
                                try {
                                    FileReader tod = new FileReader("New Dogs.txt");
                                    BufferedReader tdota = new BufferedReader(tod);
                                    String noo = "";
                                    while ((noo = tdota.readLine()) != null) {
                                        StringTokenizer oto = new StringTokenizer(noo, "|");
                                        String c2 = oto.nextToken();
                                        String d2 = oto.nextToken();
                                        String a = oto.nextToken();
                                        String c = oto.nextToken();
                                        String d = oto.nextToken();
                                        String e = oto.nextToken();
                                        String f = oto.nextToken();
                                        String g = oto.nextToken();
                                        String h = oto.nextToken();
                                        if (c2.equals(c1)) {
                                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                        }
                                    }

                                } catch (Exception err) {

                                }

                            }
                        }

                    } catch (Exception err) {

                    }
                }
                if (x.equals("Good with kids")) {

                    try {
                        FileReader tid1 = new FileReader("kids.txt");
                        BufferedReader tdata1 = new BufferedReader(tid1);
                        String no1 = "";
                        while ((no1 = tdata1.readLine()) != null) {
                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                            String c1 = ot1.nextToken();
                            String d1 = ot1.nextToken();
                            if (d1.equals("yes")) {
                                try {
                                    FileReader tod = new FileReader("New Dogs.txt");
                                    BufferedReader tdota = new BufferedReader(tod);
                                    String noo = "";
                                    while ((noo = tdota.readLine()) != null) {
                                        StringTokenizer oto = new StringTokenizer(noo, "|");
                                        String c2 = oto.nextToken();
                                        String d2 = oto.nextToken();
                                        String a = oto.nextToken();
                                        String c = oto.nextToken();
                                        String d = oto.nextToken();
                                        String e = oto.nextToken();
                                        String f = oto.nextToken();
                                        String g = oto.nextToken();
                                        String h = oto.nextToken();
                                        if (c2.equals(c1)) {
                                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                        }
                                    }

                                } catch (Exception err) {

                                }

                            }
                        }

                    } catch (Exception err) {

                    }

                }
                if (x.equals("Select Preference")) {
                    model.setRowCount(0);
                    tab.setVisible(false);
                }
            }
            if (y.equals("Size")) {
                tab.setVisible(true);
                img.setIcon(null);

                model.setRowCount(0);
                model.setColumnCount(0);

                model.addColumn("ID");
                model.addColumn("Name of Dog");
                model.addColumn("Kennel");
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x.equals("Small")) {
                            if (g.equals("small")) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }
                        if (x.equals("Medium")) {
                            if (g.equals("medium")) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }
                        if (x.equals("Large")) {
                            if (g.equals("large")) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }
                    }

                } catch (Exception err) {

                }

            }
            if (y.equals("Gender")) {
                tab.setVisible(true);
                img.setIcon(null);

                model.setRowCount(0);
                model.setColumnCount(0);

                model.addColumn("ID");
                model.addColumn("Name of Dog");
                model.addColumn("Kennel");
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x.equals("Male")) {
                            if (d.equals("male")) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }
                        if (x.equals("Female")) {
                            if (d.equals("female")) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
            if (y.equals("Age")) {
                img.setIcon(null);
                tab.setVisible(true);
                model.setRowCount(0);
                model.setColumnCount(0);

                model.addColumn("ID");
                model.addColumn("Name of Dog");
                model.addColumn("Kennel");
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }
                        if (x.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }

                        if (x.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }
                        if (x.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }
                        if (x.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }
                        if (x.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
            spec1.setVisible(false);

        }
        if (ba.equals("Age")) {

            tab.setVisible(true);

            spec1.setVisible(true);
            spec1.removeAllItems();
            spec1.addItem("Select Age Range");
            spec1.addItem("Less than 1 month");
            spec1.addItem("1 month - 1 year");
            spec1.addItem("1 - 3 years");
            spec1.addItem("4 - 7 years");
            spec1.addItem("7 - 10 years");
            spec1.addItem("More than 10 years");
        }
        if (ba.equals("Gender")) {
            tab.setVisible(true);
            spec1.setVisible(true);
            spec1.removeAllItems();
            spec1.addItem("Select Gender");
            spec1.addItem("Male");
            spec1.addItem("Female");
        }

        if (ba.equals("Size")) {
            tab.setVisible(true);

            spec1.setVisible(true);
            spec1.removeAllItems();
            spec1.addItem("Select Size");

            spec1.addItem("Small");
            spec1.addItem("Medium");
            spec1.addItem("Large");
        }
        if (ba.equals("Level of friendliness")) {
            tab.setVisible(true);

            spec1.setVisible(true);
            spec1.removeAllItems();
            spec1.addItem("Select Preference");

            spec1.addItem("Good with kids");
            spec1.addItem("Good with cats");
            spec1.addItem("Good with other dogs");

        }
        if (ba.equals("Adopted dogs")) {
            tab.setVisible(true);

            spec1.setVisible(true);
            spec1.removeAllItems();
            spec1.addItem("View All Dogs");
            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    spec1.addItem(d);

                }

            } catch (Exception err) {

            }
        }
        if (ba.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);

            spec1.setVisible(true);
            spec1.removeAllItems();
            spec1.addItem("View All Dogs");
            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    spec1.addItem(d);

                }

            } catch (Exception err) {

            }

        }

        spec2.setVisible(false);
        basis2.setVisible(false);
        button1.setVisible(false);
        button2.setVisible(false);
        spec3.setVisible(false);
        basis3.setVisible(false);
    }//GEN-LAST:event_basis1ActionPerformed

    private void spec1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spec1ActionPerformed
        String x = "" + spec.getSelectedItem();
        String y = "" + basis.getSelectedItem();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        if (y.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y.equals("Level of friendliness")) {
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);
            img.setIcon(null);
            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");

            if (x.equals("Good with other dogs")) {

                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with cats")) {

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with kids")) {

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
            if (x.equals("Select Preference")) {
                model.setRowCount(0);
                tab.setVisible(false);
            }
        }
        if (y.equals("Size")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Small")) {
                        if (g.equals("small")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Medium")) {
                        if (g.equals("medium")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Large")) {
                        if (g.equals("large")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Gender")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Male")) {
                        if (d.equals("male")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Female")) {
                        if (d.equals("female")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Age")) {
            img.setIcon(null);
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();
                    Date dt1 = format.parse(a);
                    Date date1 = new Date();
                    String diff = "";
                    long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                    long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                    long difference = (hours1 / 24) + 1;
                    diff = String.format("%d", difference);
                    if (x.equals("Less than 1 month")) {
                        if (Integer.parseInt(diff) < 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("1 month - 1 year")) {
                        if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                    if (x.equals("1 - 3 years")) {
                        if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("4 - 7 years")) {
                        if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("7 - 10 years")) {
                        if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("More than 10 years")) {
                        if (Integer.parseInt(diff) > 3652.5) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }

        String x1 = "" + spec1.getSelectedItem();
        String y1 = "" + basis1.getSelectedItem();

        if (y1.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x1.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x1.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y1.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x1.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x1.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y1.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x1.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y1.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x1.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y1.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y1.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x1.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x1.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }

        if (!y1.equals("All data per dogs in Kennel") && !y1.equals("Adopted dogs")) {
            button1.setVisible(true);
        }
        spec2.setVisible(false);
        basis2.setVisible(false);
        button2.setVisible(false);
        spec3.setVisible(false);
        basis3.setVisible(false);

    }//GEN-LAST:event_spec1ActionPerformed

    private void basis2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basis2ActionPerformed
        String x = "" + spec.getSelectedItem();
        String y = "" + basis.getSelectedItem();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        if (y.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y.equals("Level of friendliness")) {
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);
            img.setIcon(null);
            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");

            if (x.equals("Good with other dogs")) {

                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with cats")) {

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with kids")) {

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
            if (x.equals("Select Preference")) {
                model.setRowCount(0);
                tab.setVisible(false);
            }
        }
        if (y.equals("Size")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Small")) {
                        if (g.equals("small")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Medium")) {
                        if (g.equals("medium")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Large")) {
                        if (g.equals("large")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Gender")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Male")) {
                        if (d.equals("male")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Female")) {
                        if (d.equals("female")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Age")) {
            img.setIcon(null);
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();
                    Date dt1 = format.parse(a);
                    Date date1 = new Date();
                    String diff = "";
                    long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                    long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                    long difference = (hours1 / 24) + 1;
                    diff = String.format("%d", difference);
                    if (x.equals("Less than 1 month")) {
                        if (Integer.parseInt(diff) < 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("1 month - 1 year")) {
                        if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                    if (x.equals("1 - 3 years")) {
                        if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("4 - 7 years")) {
                        if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("7 - 10 years")) {
                        if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("More than 10 years")) {
                        if (Integer.parseInt(diff) > 3652.5) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }

        String x1 = "" + spec1.getSelectedItem();
        String y1 = "" + basis1.getSelectedItem();

        if (y1.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x1.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x1.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y1.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x1.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x1.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y1.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x1.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y1.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x1.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y1.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y1.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x1.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x1.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }

        if (!y1.equals("All data per dogs in Kennel") && !y1.equals("Adopted dogs")) {
            button1.setVisible(true);
        }
        spec2.setVisible(false);
        String ba = "" + basis2.getSelectedItem();

        if (ba.equals("Age")) {

            tab.setVisible(true);

            spec2.setVisible(true);
            spec2.removeAllItems();
            spec2.addItem("Select Age Range");
            spec2.addItem("Less than 1 month");
            spec2.addItem("1 month - 1 year");
            spec2.addItem("1 - 3 years");
            spec2.addItem("4 - 7 years");
            spec2.addItem("7 - 10 years");
            spec2.addItem("More than 10 years");
        }
        if (ba.equals("Gender")) {
            tab.setVisible(true);
            spec2.setVisible(true);
            spec2.removeAllItems();
            spec2.addItem("Select Gender");
            spec2.addItem("Male");
            spec2.addItem("Female");
        }

        if (ba.equals("Size")) {
            tab.setVisible(true);

            spec2.setVisible(true);
            spec2.removeAllItems();
            spec2.addItem("Select Size");
            spec2.addItem("Small");
            spec2.addItem("Medium");
            spec2.addItem("Large");
        }
        if (ba.equals("Level of friendliness")) {
            tab.setVisible(true);

            spec2.setVisible(true);
            spec2.removeAllItems();
            spec2.addItem("Select Preference");
            spec2.addItem("Good with kids");
            spec2.addItem("Good with cats");
            spec2.addItem("Good with other dogs");

        }
        if (ba.equals("Adopted dogs")) {
            tab.setVisible(true);

            spec2.setVisible(true);
            spec2.removeAllItems();
            spec2.addItem("View All Dogs");
            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    spec2.addItem(d);

                }

            } catch (Exception err) {

            }
        }
        if (ba.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);

            spec2.setVisible(true);
            spec2.removeAllItems();
            spec2.addItem("View All Dogs");
            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    spec2.addItem(d);

                }

            } catch (Exception err) {

            }

        }

        button2.setVisible(false);
        spec3.setVisible(false);
        basis3.setVisible(false);

     }//GEN-LAST:event_basis2ActionPerformed

    private void spec2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spec2ActionPerformed
        String x = "" + spec.getSelectedItem();
        String y = "" + basis.getSelectedItem();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        if (y.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y.equals("Level of friendliness")) {
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);
            img.setIcon(null);
            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");

            if (x.equals("Good with other dogs")) {

                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with cats")) {

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with kids")) {

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
            if (x.equals("Select Preference")) {
                model.setRowCount(0);
                tab.setVisible(false);
            }
        }
        if (y.equals("Size")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Small")) {
                        if (g.equals("small")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Medium")) {
                        if (g.equals("medium")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Large")) {
                        if (g.equals("large")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Gender")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Male")) {
                        if (d.equals("male")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Female")) {
                        if (d.equals("female")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Age")) {
            img.setIcon(null);
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();
                    Date dt1 = format.parse(a);
                    Date date1 = new Date();
                    String diff = "";
                    long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                    long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                    long difference = (hours1 / 24) + 1;
                    diff = String.format("%d", difference);
                    if (x.equals("Less than 1 month")) {
                        if (Integer.parseInt(diff) < 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("1 month - 1 year")) {
                        if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                    if (x.equals("1 - 3 years")) {
                        if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("4 - 7 years")) {
                        if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("7 - 10 years")) {
                        if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("More than 10 years")) {
                        if (Integer.parseInt(diff) > 3652.5) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }

        String x1 = "" + spec1.getSelectedItem();
        String y1 = "" + basis1.getSelectedItem();

        if (y1.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x1.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x1.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y1.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x1.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x1.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y1.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x1.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y1.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x1.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y1.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y1.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x1.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x1.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }
        String x2 = "" + spec2.getSelectedItem();
        String y2 = "" + basis2.getSelectedItem();

        if (y2.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x2.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x2.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y2.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x2.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x2.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y2.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x2.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x2.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x2.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y2.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x2.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x2.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y2.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x2.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x2.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y2.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x2.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x2.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x2.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }

        if (!y2.equals("All data per dogs in Kennel") && !y2.equals("Adopted dogs")) {
            button2.setVisible(true);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_spec2ActionPerformed

    private void basis3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basis3ActionPerformed
        String x = "" + spec.getSelectedItem();
        String y = "" + basis.getSelectedItem();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        if (y.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y.equals("Level of friendliness")) {
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);
            img.setIcon(null);
            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");

            if (x.equals("Good with other dogs")) {

                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with cats")) {

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with kids")) {

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
            if (x.equals("Select Preference")) {
                model.setRowCount(0);
                tab.setVisible(false);
            }
        }
        if (y.equals("Size")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Small")) {
                        if (g.equals("small")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Medium")) {
                        if (g.equals("medium")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Large")) {
                        if (g.equals("large")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Gender")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Male")) {
                        if (d.equals("male")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Female")) {
                        if (d.equals("female")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Age")) {
            img.setIcon(null);
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();
                    Date dt1 = format.parse(a);
                    Date date1 = new Date();
                    String diff = "";
                    long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                    long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                    long difference = (hours1 / 24) + 1;
                    diff = String.format("%d", difference);
                    if (x.equals("Less than 1 month")) {
                        if (Integer.parseInt(diff) < 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("1 month - 1 year")) {
                        if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                    if (x.equals("1 - 3 years")) {
                        if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("4 - 7 years")) {
                        if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("7 - 10 years")) {
                        if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("More than 10 years")) {
                        if (Integer.parseInt(diff) > 3652.5) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }

        String x1 = "" + spec1.getSelectedItem();
        String y1 = "" + basis1.getSelectedItem();

        if (y1.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x1.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x1.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y1.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x1.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x1.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y1.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x1.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y1.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x1.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y1.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y1.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x1.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x1.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }
        String x2 = "" + spec2.getSelectedItem();
        String y2 = "" + basis2.getSelectedItem();

        if (y2.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x2.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x2.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y2.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x2.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x2.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y2.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x2.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x2.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x2.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y2.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x2.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x2.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y2.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x2.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x2.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y2.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x2.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x2.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x2.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }

        if (!y2.equals("All data per dogs in Kennel") && !y2.equals("Adopted dogs")) {
            button2.setVisible(true);
        }
        spec3.setVisible(false);
        String ba = "" + basis3.getSelectedItem();

        if (ba.equals("Age")) {

            tab.setVisible(true);

            spec3.setVisible(true);
            spec3.removeAllItems();
            spec3.addItem("Select Age Range");
            spec3.addItem("Less than 1 month");
            spec3.addItem("1 month - 1 year");
            spec3.addItem("1 - 3 years");
            spec3.addItem("4 - 7 years");
            spec3.addItem("7 - 10 years");
            spec3.addItem("More than 10 years");
        }
        if (ba.equals("Gender")) {
            tab.setVisible(true);
            spec3.setVisible(true);
            spec3.removeAllItems();
            spec3.addItem("Select Gender");
            spec3.addItem("Male");
            spec3.addItem("Female");
        }

        if (ba.equals("Size")) {
            tab.setVisible(true);

            spec3.setVisible(true);
            spec3.removeAllItems();
            spec3.addItem("Select Size");
            spec3.addItem("Small");
            spec3.addItem("Medium");
            spec3.addItem("Large");
        }
        if (ba.equals("Level of friendliness")) {
            tab.setVisible(true);

            spec3.setVisible(true);
            spec3.removeAllItems();
            spec3.addItem("Select Preference");
            spec3.addItem("Good with kids");
            spec3.addItem("Good with cats");
            spec3.addItem("Good with other dogs");

        }
        if (ba.equals("Adopted dogs")) {
            tab.setVisible(true);

            spec3.setVisible(true);
            spec3.removeAllItems();
            spec3.addItem("View All Dogs");
            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    spec3.addItem(d);

                }

            } catch (Exception err) {

            }
        }
        if (ba.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);

            spec3.setVisible(true);
            spec3.removeAllItems();
            spec3.addItem("View All Dogs");
            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    spec3.addItem(d);

                }

            } catch (Exception err) {

            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_basis3ActionPerformed

    private void spec3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spec3ActionPerformed
        String x = "" + spec.getSelectedItem();
        String y = "" + basis.getSelectedItem();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        if (y.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y.equals("Level of friendliness")) {
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);
            img.setIcon(null);
            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");

            if (x.equals("Good with other dogs")) {

                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with cats")) {

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x.equals("Good with kids")) {

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
            if (x.equals("Select Preference")) {
                model.setRowCount(0);
                tab.setVisible(false);
            }
        }
        if (y.equals("Size")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Small")) {
                        if (g.equals("small")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Medium")) {
                        if (g.equals("medium")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Large")) {
                        if (g.equals("large")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Gender")) {
            tab.setVisible(true);
            img.setIcon(null);

            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();

                    if (x.equals("Male")) {
                        if (d.equals("male")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("Female")) {
                        if (d.equals("female")) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }
        if (y.equals("Age")) {
            img.setIcon(null);
            tab.setVisible(true);
            model.setRowCount(0);
            model.setColumnCount(0);

            model.addColumn("ID");
            model.addColumn("Name of Dog");
            model.addColumn("Kennel");
            try {
                FileReader tod = new FileReader("New Dogs.txt");
                BufferedReader tdota = new BufferedReader(tod);
                String noo = "";
                while ((noo = tdota.readLine()) != null) {
                    StringTokenizer oto = new StringTokenizer(noo, "|");
                    String c2 = oto.nextToken();
                    String d2 = oto.nextToken();
                    String a = oto.nextToken();
                    String c = oto.nextToken();
                    String d = oto.nextToken();
                    String e = oto.nextToken();
                    String f = oto.nextToken();
                    String g = oto.nextToken();
                    String h = oto.nextToken();
                    Date dt1 = format.parse(a);
                    Date date1 = new Date();
                    String diff = "";
                    long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                    long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                    long difference = (hours1 / 24) + 1;
                    diff = String.format("%d", difference);
                    if (x.equals("Less than 1 month")) {
                        if (Integer.parseInt(diff) < 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("1 month - 1 year")) {
                        if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                    if (x.equals("1 - 3 years")) {
                        if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("4 - 7 years")) {
                        if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("7 - 10 years")) {
                        if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }
                    if (x.equals("More than 10 years")) {
                        if (Integer.parseInt(diff) > 3652.5) {
                            model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});
                        }
                    }

                }

            } catch (Exception err) {

            }

        }

        String x1 = "" + spec1.getSelectedItem();
        String y1 = "" + basis1.getSelectedItem();

        if (y1.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x1.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x1.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y1.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x1.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x1.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y1.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x1.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x1.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y1.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x1.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y1.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x1.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y1.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x1.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x1.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x1.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x1.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }
        String x2 = "" + spec2.getSelectedItem();
        String y2 = "" + basis2.getSelectedItem();

        if (y2.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x2.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x2.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y2.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x2.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x2.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y2.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x2.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x2.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x2.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y2.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x2.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x2.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y2.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x2.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x2.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y2.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x2.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x2.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x2.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x2.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }
        String x3 = "" + spec3.getSelectedItem();
        String y3 = "" + basis3.getSelectedItem();

        if (y3.equals("All data per dogs in Kennel")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Kennel");
            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("New Dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();

                    if (x3.equals("View All Dogs")) {
                        model.insertRow(model.getRowCount(), new Object[]{c, d, l});

                    } else if (x3.equals(d)) {
                        model.setColumnCount(0);
                        model.setRowCount(0);
                        model.addColumn("Field");
                        model.addColumn("Data");
                        model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                        model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                        model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                        model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                        model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                        model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                        model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                        model.insertRow(model.getRowCount(), new Object[]{"Kennel: ", l});
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Neuteredandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Neutered? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Neutered:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Vaccinatedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Vaccinated? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        String f1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Date Vaccinted:", e1});
                                        model.insertRow(model.getRowCount(), new Object[]{"Vaccination Details:", f1});

                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("Microchippedandnot.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                    if (d1.equals("yes")) {
                                        String e1 = ot1.nextToken();
                                        model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                    }
                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("dogs.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with dogs? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("cats.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with cats? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        try {
                            FileReader tid1 = new FileReader("kids.txt");
                            BufferedReader tdata1 = new BufferedReader(tid1);
                            String no1 = "";
                            while ((no1 = tdata1.readLine()) != null) {
                                StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                String c1 = ot1.nextToken();
                                String d1 = ot1.nextToken();
                                if (c1.equals(c)) {
                                    model.insertRow(model.getRowCount(), new Object[]{"Good with kids? ", d1});

                                }
                            }

                        } catch (Exception err) {

                        }
                        model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                        model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                        ImageIcon icon = new ImageIcon(o, "");
                        img.setIcon(icon);

                    }
                }
            } catch (Exception error) {
            }
        }
        if (y3.equals("Adopted dogs")) {
            tab.setVisible(true);
            model.setColumnCount(0);
            model.addColumn("ID Number");
            model.addColumn("Name");
            model.addColumn("Adopted on");

            model.addColumn("Adopted by");
            model.addColumn("Address");
            model.addColumn("Mobile Number");
            model.addColumn("Email ID");

            model.setRowCount(0);

            try {
                FileReader tid = new FileReader("Adopted dogs.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();
                    String e = ot.nextToken();
                    String f = ot.nextToken();
                    String h = ot.nextToken();
                    String i = ot.nextToken();
                    String j = ot.nextToken();
                    String k = ot.nextToken();
                    String l = ot.nextToken();
                    String m = ot.nextToken();
                    String n = ot.nextToken();
                    String o = ot.nextToken();
                    try {
                        FileReader tid10 = new FileReader("Adopters.txt");
                        BufferedReader tdata10 = new BufferedReader(tid10);
                        String no10 = "";
                        while ((no10 = tdata10.readLine()) != null) {
                            StringTokenizer ot10 = new StringTokenizer(no10, "|");
                            String a1 = ot10.nextToken();
                            String d2 = ot10.nextToken();
                            String e2 = ot10.nextToken();
                            String f2 = ot10.nextToken();
                            String g1 = ot10.nextToken();
                            String h1 = ot10.nextToken();
                            if (a1.equals(d)) {

                                if (x3.equals("View All Dogs")) {
                                    model.insertRow(model.getRowCount(), new Object[]{c, d, d2, e2, f2, g1, h1});

                                } else if (x3.equals(d)) {
                                    model.setColumnCount(0);
                                    model.setRowCount(0);
                                    model.addColumn("Field");
                                    model.addColumn("Data");
                                    model.insertRow(model.getRowCount(), new Object[]{"Id Number: ", c});
                                    model.insertRow(model.getRowCount(), new Object[]{"Date of Birth: ", e});
                                    model.insertRow(model.getRowCount(), new Object[]{"Entry Date: ", f});
                                    model.insertRow(model.getRowCount(), new Object[]{"Gender: ", h});
                                    model.insertRow(model.getRowCount(), new Object[]{"Breed: ", i});
                                    model.insertRow(model.getRowCount(), new Object[]{"Color: ", j});
                                    model.insertRow(model.getRowCount(), new Object[]{"Size: ", k});
                                    model.insertRow(model.getRowCount(), new Object[]{"Old Kennel: ", l});

                                    try {
                                        FileReader tid1 = new FileReader("Microchippedandnot.txt");
                                        BufferedReader tdata1 = new BufferedReader(tid1);
                                        String no1 = "";
                                        while ((no1 = tdata1.readLine()) != null) {
                                            StringTokenizer ot1 = new StringTokenizer(no1, "|");
                                            String c1 = ot1.nextToken();
                                            String d1 = ot1.nextToken();
                                            if (c1.equals(c)) {
                                                model.insertRow(model.getRowCount(), new Object[]{"Microchipped? ", d1});
                                                if (d1.equals("yes")) {
                                                    String e1 = ot1.nextToken();
                                                    model.insertRow(model.getRowCount(), new Object[]{"Microchip Number:", e1});
                                                }
                                            }
                                        }

                                    } catch (Exception err) {

                                    }

                                    model.insertRow(model.getRowCount(), new Object[]{"Personality: ", m});
                                    model.insertRow(model.getRowCount(), new Object[]{"History: ", n});
                                    ImageIcon icon = new ImageIcon(o, "");
                                    img.setIcon(icon);
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted on: ", d2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Adopted by: ", e2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Address: ", f2});
                                    model.insertRow(model.getRowCount(), new Object[]{"Mobile Number: ", g1});
                                    model.insertRow(model.getRowCount(), new Object[]{"Email ID: ", h1});

                                }
                            }
                        }
                    } catch (Exception error) {
                    }
                }
            } catch (Exception error) {

            }

        }
        if (y3.equals("Level of friendliness")) {

            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (x3.equals("Good with other dogs")) {

                model.setRowCount(0);
                try {
                    FileReader tid1 = new FileReader("dogs.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }

                                    }

                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x3.equals("Good with cats")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("cats.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {

                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }
            }
            if (x3.equals("Good with kids")) {
                model.setRowCount(0);

                try {
                    FileReader tid1 = new FileReader("kids.txt");
                    BufferedReader tdata1 = new BufferedReader(tid1);
                    String no1 = "";
                    while ((no1 = tdata1.readLine()) != null) {
                        StringTokenizer ot1 = new StringTokenizer(no1, "|");
                        String c1 = ot1.nextToken();
                        String d1 = ot1.nextToken();
                        if (d1.equals("yes")) {
                            try {
                                FileReader tod = new FileReader("New Dogs.txt");
                                BufferedReader tdota = new BufferedReader(tod);
                                String noo = "";
                                while ((noo = tdota.readLine()) != null) {
                                    StringTokenizer oto = new StringTokenizer(noo, "|");
                                    String c2 = oto.nextToken();
                                    String d2 = oto.nextToken();
                                    String a = oto.nextToken();
                                    String c = oto.nextToken();
                                    String d = oto.nextToken();
                                    String e = oto.nextToken();
                                    String f = oto.nextToken();
                                    String g = oto.nextToken();
                                    String h = oto.nextToken();
                                    if (c2.equals(c1)) {
                                        for (int l = 0; l < d7; l++) {
                                            if ((obj[l].equals(d2))) {
                                                model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                            }

                                        }
                                    }
                                }

                            } catch (Exception err) {

                            }

                        }
                    }

                } catch (Exception err) {

                }

            }
        }
        if (y3.equals("Size")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }

            if (!x3.equals("Select Size")) {
                model.setRowCount(0);

                try {

                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";

                    while ((noo = tdota.readLine()) != null) {

                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x3.equalsIgnoreCase(g)) {

                            for (int l = 0; l < d7; l++) {
                                if ((obj[l].equals(d2))) {
                                    model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                }
                            }

                        }

                    }

                } catch (Exception err) {

                }
            }
        }
        if (y3.equals("Gender")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x3.equals("Select Gender")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();

                        if (x3.equals("Male")) {
                            if (d.equals("male")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x3.equals("Female")) {
                            if (d.equals("female")) {

                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }
            }

        }
        if (y3.equals("Age")) {
            img.setIcon(null);
            int d7 = model.getRowCount();
            String obj[] = new String[d7];
            for (int i = 0; i < d7; i++) {
                obj[i] = (String) tab.getValueAt(i, 1);
            }
            if (!x3.equals("Select Age Range")) {
                model.setRowCount(0);
                try {
                    FileReader tod = new FileReader("New Dogs.txt");
                    BufferedReader tdota = new BufferedReader(tod);
                    String noo = "";
                    while ((noo = tdota.readLine()) != null) {
                        StringTokenizer oto = new StringTokenizer(noo, "|");
                        String c2 = oto.nextToken();
                        String d2 = oto.nextToken();
                        String a = oto.nextToken();
                        String c = oto.nextToken();
                        String d = oto.nextToken();
                        String e = oto.nextToken();
                        String f = oto.nextToken();
                        String g = oto.nextToken();
                        String h = oto.nextToken();
                        Date dt1 = format.parse(a);
                        Date date1 = new Date();
                        String diff = "";
                        long timeDiff = Math.abs(date1.getTime() - dt1.getTime());
                        long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
                        long difference = (hours1 / 24) + 1;
                        diff = String.format("%d", difference);
                        if (x2.equals("Less than 1 month")) {
                            if (Integer.parseInt(diff) < 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x3.equals("1 month - 1 year")) {
                            if (Integer.parseInt(diff) < 365.25 && Integer.parseInt(diff) >= 31) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                        if (x3.equals("1 - 3 years")) {
                            if (Integer.parseInt(diff) < 1095.75 && Integer.parseInt(diff) >= 365.25) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x3.equals("4 - 7 years")) {
                            if (Integer.parseInt(diff) < 2556.75 && Integer.parseInt(diff) >= 1095.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x3.equals("7 - 10 years")) {
                            if (Integer.parseInt(diff) <= 3652.5 && Integer.parseInt(diff) >= 2556.75) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }
                        if (x3.equals("More than 10 years")) {
                            if (Integer.parseInt(diff) > 3652.5) {
                                for (int l = 0; l < d7; l++) {
                                    if ((obj[l].equals(d2))) {
                                        model.insertRow(model.getRowCount(), new Object[]{c2, d2, h});

                                    }

                                }
                            }
                        }

                    }

                } catch (Exception err) {

                }

            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_spec3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> basis;
    private javax.swing.JComboBox<String> basis1;
    private javax.swing.JComboBox<String> basis2;
    private javax.swing.JComboBox<String> basis3;
    private javax.swing.JButton button;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JLabel img;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> spec;
    private javax.swing.JComboBox<String> spec1;
    private javax.swing.JComboBox<String> spec2;
    private javax.swing.JComboBox<String> spec3;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables
}
