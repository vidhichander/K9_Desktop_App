
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vidhi
 */
/* This form will allow the user to edit the data of an event after it is over. 
   The data, including the funds raised, will then be saved into the system
*/
public class Fundraising extends javax.swing.JPanel {

    /**
     * Creates new form booksales
     */
    public Fundraising() {
        initComponents();
        c1.removeAllItems();
        c1.addItem("Select Volunteer");
        try {
            FileReader tid = new FileReader("Volunteers.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();

                c1.addItem(d);
            }

        } catch (Exception err) {

        }
        e1.addItem("Select Event");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ds1 = new javax.swing.JLabel();
        da = new com.toedter.calendar.JDateChooser();
        nois = new javax.swing.JLabel();
        sold = new javax.swing.JTextField();
        med = new javax.swing.JLabel();
        money = new javax.swing.JTextField();
        vic = new javax.swing.JLabel();
        v1 = new javax.swing.JTextField();
        c1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        ev1 = new javax.swing.JLabel();
        e1 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel3.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel3.setText("Fundraising");

        ds1.setText("Date Started: ");

        da.setDateFormatString("dd/MM/yyyy");
        da.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                daPropertyChange(evt);
            }
        });

        nois.setText("Number of items sold:");

        sold.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                soldFocusGained(evt);
            }
        });

        med.setText("Money earned (Dhs):");

        money.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                moneyFocusGained(evt);
            }
        });

        vic.setText("Volunteer in charge:");

        v1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        v1.setForeground(java.awt.Color.lightGray);
        v1.setText("Search");
        v1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                v1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                v1FocusLost(evt);
            }
        });
        v1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                v1KeyReleased(evt);
            }
        });

        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ev1.setText("Events:");

        e1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel7.setText("Data");

        jLabel9.setIcon(new javax.swing.ImageIcon("/Users/Rajul/Downloads/logo.gif")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Chalkboard SE", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Update the information of each event");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(med)
                                .addGap(18, 18, 18)
                                .addComponent(money, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nois)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sold, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ev1)
                                    .addComponent(ds1)
                                    .addComponent(vic))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(v1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(da, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(da, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ds1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ev1)
                    .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(v1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vic))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nois))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(money, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(med))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(8, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void e1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e1ActionPerformed
ev1.setText("Events:");
            ev1.setForeground(Color.black);

    }//GEN-LAST:event_e1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Date ds2 = da.getDate();
        String event = "" + e1.getSelectedItem();
        String vol = "" + c1.getSelectedItem();
        String itemss = sold.getText();
        String mon = money.getText();
        String y = "";
        String x = "";
         DateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        boolean err = false;
        if (ds2 == null) {
            err = true;
            ds1.setText("* Date Started:");
            ds1.setForeground(Color.red);
        }
        if (event.equals("Select Event")){
            err = true;
            ev1.setText("* Events:");
            ev1.setForeground(Color.red);
        }
        if (vol.equals("Select Volunteer")){
            err = true;
            vic.setText("* Volunteer in charge:");
            vic.setForeground(Color.red);
        }
        if (itemss.equals("")){
            err = true;
            nois.setText("* Number of items sold:");
            nois.setForeground(Color.red);
        }
        if (mon.equals("")){
            err = true;
            med.setText("* Money earned (Dhs):");
            med.setForeground(Color.red);
        }
        if (err == true) {
            javax.swing.JOptionPane.showMessageDialog(null, "Please complete all fields", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        if (err == false){
            String ds = format.format(ds2);

        try {
            FileReader stud = new FileReader("Upcoming Events.txt");
            BufferedReader studa = new BufferedReader(stud);
            String no = "";
            while ((no = studa.readLine()) != null) {
                StringTokenizer pz = new StringTokenizer(no, "|");
                String i = pz.nextToken();
                String e = pz.nextToken();
                if (event.equals(e)) {
                    y = i;
                }
            }
        } catch (Exception error) {

        }
        try {
            FileReader stud = new FileReader("Volunteers.txt");
            BufferedReader studa = new BufferedReader(stud);
            String no = "";
            while ((no = studa.readLine()) != null) {
                StringTokenizer pz = new StringTokenizer(no, "|");
                String i = pz.nextToken();
                String e = pz.nextToken();
                if (vol.equals(e)) {
                    x = i;
                }
            }

        } catch (Exception error) {

        }
        try {
            FileWriter up = new FileWriter("Event funds.txt", true);
            PrintWriter upcom = new PrintWriter(up);

            upcom.println(ds + "|" + y + "|" + x + "|" + itemss + "|" + mon);

            upcom.close();

        } catch (Exception error) {

        }
        da.setDate(null);
        e1.removeAllItems();
        e1.addItem("Select Event");
        try {
            FileReader stud = new FileReader("Upcoming Events.txt");
            BufferedReader studa = new BufferedReader(stud);
            String no = "";
            while ((no = studa.readLine()) != null) {
                StringTokenizer pz = new StringTokenizer(no, "|");
                String i = pz.nextToken();
                String e = pz.nextToken();
                String a = pz.nextToken();
                String b = pz.nextToken();
                if (ds.equals(b)) {
                    e1.addItem(e);
                }
            }
        } catch (Exception error) {

        }
        v1.setText("");
        c1.removeAllItems();
        c1.addItem("Select Volunteer");
        try {
            FileReader tid = new FileReader("Volunteers.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();

                c1.addItem(d);
            }

        } catch (Exception error) {

        }
        money.setText("");
        sold.setText("");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void v1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_v1KeyReleased
        c1.removeAllItems();
        String v = v1.getText();
        int le = v.length();

        String x = "";
        try {
            FileReader tid = new FileReader("Volunteers.txt");
            BufferedReader tdata = new BufferedReader(tid);
            String no = "";
            while ((no = tdata.readLine()) != null) {
                StringTokenizer ot = new StringTokenizer(no, "|");
                String c = ot.nextToken();
                String d = ot.nextToken();

                x = "";
                for (int i = 0; i < le; i++) {
                    x = x + d.substring(i, i + 1);

                    if ((x).equals(v) || x.toUpperCase().equals(v) || x.toLowerCase().equals(v)) {
                        c1.addItem(d);
                    }

                }

            }
        } catch (Exception err) {

        }
        if (v.equals("")) {
            c1.removeAllItems();
            c1.addItem("Select Volunteer");
            try {
                FileReader tid = new FileReader("Volunteers.txt");
                BufferedReader tdata = new BufferedReader(tid);
                String no = "";
                while ((no = tdata.readLine()) != null) {
                    StringTokenizer ot = new StringTokenizer(no, "|");
                    String c = ot.nextToken();
                    String d = ot.nextToken();

                    c1.addItem(d);
                }

            } catch (Exception err) {

            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_v1KeyReleased

    private void daPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_daPropertyChange
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Date da1 = da.getDate();
        if (da1 != null) {
            String ds = format.format(da1);
            e1.removeAllItems();
            e1.addItem("Select Event");
            try {
                FileReader stud = new FileReader("Upcoming Events.txt");
                BufferedReader studa = new BufferedReader(stud);
                String no = "";
                while ((no = studa.readLine()) != null) {
                    StringTokenizer pz = new StringTokenizer(no, "|");
                    String i = pz.nextToken();
                    String e = pz.nextToken();
                    String a = pz.nextToken();
                    String b = pz.nextToken();
                    if (ds.equals(b)) {
                        e1.addItem(e);
                    }
                }
            } catch (Exception error) {

            }
        }
ds1.setText("Date Started:");
            ds1.setForeground(Color.black);

    }//GEN-LAST:event_daPropertyChange

    private void v1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v1FocusGained
  vic.setText("Volunteer in charge:");
            vic.setForeground(Color.black);
        
    v1.setText("");
    v1.setForeground(Color.black);
          

    }//GEN-LAST:event_v1FocusGained

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
  vic.setText("Volunteer in charge:");
            vic.setForeground(Color.black);
        
       
   
                  // TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void soldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_soldFocusGained

            nois.setText("Number of items sold:");
            nois.setForeground(Color.black);
        
        
                  // TODO add your handling code here:
    }//GEN-LAST:event_soldFocusGained

    private void moneyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moneyFocusGained

            med.setText("Money earned (Dhs):");
            med.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_moneyFocusGained

    private void v1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_v1FocusLost
if ((v1.getText()).equals("")){
    v1.setText("Search");
    v1.setForeground(Color.lightGray);}         // TODO add your handling code here:
    }//GEN-LAST:event_v1FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox c1;
    private com.toedter.calendar.JDateChooser da;
    private javax.swing.JLabel ds1;
    private javax.swing.JComboBox e1;
    private javax.swing.JLabel ev1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel med;
    private javax.swing.JTextField money;
    private javax.swing.JLabel nois;
    private javax.swing.JTextField sold;
    private javax.swing.JTextField v1;
    private javax.swing.JLabel vic;
    // End of variables declaration//GEN-END:variables
}
