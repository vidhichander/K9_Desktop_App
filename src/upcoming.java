
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vidhi
 */
/* This form will accept the data of each event organized by the Kennel, which will be saved along with the ID of the event, which is automatically generated (primary key).

*/
public class upcoming extends javax.swing.JPanel {

    /**
     * Creates new form upcoming
     */
    public upcoming() {
        initComponents();
        te.setVisible(false);
        de.setVisible(false);
        dur.setVisible(false);
        da1.setVisible(false);
        hr.setVisible(false);
        hr1.setVisible(false);
        end.setVisible(false);
        end1.setVisible(false);
        dot2.setVisible(false);
        dur1.setVisible(false);
        dur3.setVisible(false);
        min2.setVisible(false);
        minu.setVisible(false);
        t4.setVisible(false);
        t4.setSelected(true);

        num.setEditable(false);
        try {
            FileReader idf = new FileReader("eventid.txt");
            BufferedReader idFile = new BufferedReader(idf);
            int idg = Integer.parseInt(idFile.readLine());
            idg = idg + 1;
            num.setText("" + idg);
        } catch (Exception error) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        min1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        name1 = new javax.swing.JLabel();
        ds = new javax.swing.JLabel();
        loca = new javax.swing.JLabel();
        ts = new javax.swing.JLabel();
        dur = new javax.swing.JLabel();
        te = new javax.swing.JLabel();
        na = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        da = new com.toedter.calendar.JDateChooser();
        hr = new javax.swing.JTextField();
        end = new javax.swing.JTextField();
        loc = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        num = new javax.swing.JTextField();
        de = new javax.swing.JLabel();
        da1 = new com.toedter.calendar.JDateChooser();
        days = new javax.swing.JRadioButton();
        hours = new javax.swing.JRadioButton();
        end1 = new javax.swing.JTextField();
        time1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dot = new javax.swing.JLabel();
        dot2 = new javax.swing.JLabel();
        dur1 = new javax.swing.JLabel();
        hr1 = new javax.swing.JTextField();
        dur2 = new javax.swing.JLabel();
        dur3 = new javax.swing.JLabel();
        min2 = new javax.swing.JTextField();
        minu = new javax.swing.JLabel();
        t4 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel11.setText("Mins");

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel3.setFont(new java.awt.Font("Chalkboard", 0, 36)); // NOI18N
        jLabel3.setText("Upcoming events");

        name1.setText("Name of event:");

        ds.setText("Date Starting:");

        loca.setText("Location:");

        ts.setText("Time Starting (24hrs):");

        dur.setText("Total Duration:");

        te.setText("Time Ending (24hrs) :");

        na.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                naFocusGained(evt);
            }
        });
        na.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naActionPerformed(evt);
            }
        });
        na.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                naKeyReleased(evt);
            }
        });

        time.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                timeFocusGained(evt);
            }
        });
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });
        time.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timeKeyReleased(evt);
            }
        });

        da.setDateFormatString("dd/MM/yyyy");
        da.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                daPropertyChange(evt);
            }
        });

        hr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hrFocusLost(evt);
            }
        });
        hr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrActionPerformed(evt);
            }
        });

        end.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                endFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                endFocusLost(evt);
            }
        });
        end.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                endCaretPositionChanged(evt);
            }
        });
        end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endActionPerformed(evt);
            }
        });
        end.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                endKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                endKeyReleased(evt);
            }
        });

        loc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                locFocusGained(evt);
            }
        });
        loc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locActionPerformed(evt);
            }
        });
        loc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                locKeyReleased(evt);
            }
        });

        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        jLabel9.setText("Event ID:");

        num.setFont(new java.awt.Font("Chalkboard", 0, 14)); // NOI18N
        num.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numFocusGained(evt);
            }
        });

        de.setText("Date Ending:");

        da1.setDateFormatString("dd/MM/yyyy");
        da1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                da1ComponentAdded(evt);
            }
        });
        da1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                da1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        da1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                da1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                da1FocusLost(evt);
            }
        });
        da1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                da1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                da1MouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                da1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                da1MouseExited(evt);
            }
        });
        da1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                da1ComponentShown(evt);
            }
        });
        da1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                da1InputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        da1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                da1PropertyChange(evt);
            }
        });

        buttonGroup3.add(days);
        days.setText("Days");
        days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daysActionPerformed(evt);
            }
        });

        buttonGroup3.add(hours);
        hours.setText("Hours");
        hours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoursActionPerformed(evt);
            }
        });

        end1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                end1FocusGained(evt);
            }
        });
        end1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                end1ActionPerformed(evt);
            }
        });
        end1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                end1KeyReleased(evt);
            }
        });

        time1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                time1FocusGained(evt);
            }
        });
        time1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time1ActionPerformed(evt);
            }
        });
        time1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                time1KeyReleased(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon("/Users/Rajul/Downloads/logo.gif")); // NOI18N

        dot.setText(":");

        dot2.setText(":");

        dur1.setText("Days");

        hr1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hr1FocusLost(evt);
            }
        });
        hr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hr1ActionPerformed(evt);
            }
        });

        dur2.setText("Duration:");

        dur3.setText("Hours");

        minu.setText("Mins");

        buttonGroup3.add(t4);
        t4.setText("t");

        jLabel2.setFont(new java.awt.Font("Chalkboard SE", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Add a new event to your calendar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ds)
                            .addComponent(loca))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(da, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(158, 158, 158))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(loc)
                                .addGap(3, 3, 3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(jLabel9)
                                                .addGap(41, 41, 41)
                                                .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(t4))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel2)))
                                        .addGap(24, 24, 24)))
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ts)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(time1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(te)
                                            .addComponent(de))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(end1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(7, 7, 7)
                                                        .addComponent(dur1)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(dot2)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(end, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(2, 2, 2)
                                                        .addComponent(hr, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(dur3)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(min2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addComponent(da1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(7, 7, 7)
                                                .addComponent(jButton1))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dur)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hr1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minu))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(name1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(na, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dur2)
                                .addGap(51, 51, 51)
                                .addComponent(days)
                                .addGap(18, 18, 18)
                                .addComponent(hours)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(t4))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(name1))
                    .addComponent(na, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(loca))
                    .addComponent(loc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ds, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(da, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(time1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ts, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dur2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(days)
                        .addComponent(hours)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(da1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(de, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(te, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(end1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dot2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(end, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dur, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hr1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dur1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dur3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minu)
                    .addComponent(min2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void naActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_naActionPerformed

    private void locActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String id = num.getText();
        String n = na.getText();
        String pl = loc.getText();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Date a = da.getDate();
        Date b = da1.getDate();
        String date1 = "";
        String t1 = time.getText();
        String e1 = end.getText();
        String t2 = time1.getText();
        String e2 = end1.getText();

        String days1 = hr1.getText();
        String hours1 = hr.getText();
        String minutes = min2.getText();
        boolean err = false;
        if (n.equals("")) {
            err = true;
            name1.setText("* Name of event:");
            name1.setForeground(Color.red);
        }
        if (pl.equals("")) {
            err = true;
            loca.setText("* Location:");
            loca.setForeground(Color.red);
        }
        if (a == null) {
            err = true;
            ds.setText("* Date Starting:");
            ds.setForeground(Color.red);
        }
        if (t1.equals("") || t2.equals("")) {
            err = true;
            ts.setText("* Time Starting (24hrs):");
            ts.setForeground(Color.red);
        }
        if (t4.isSelected() == true) {
            err = true;
            dur2.setText("* Duration:");
            dur2.setForeground(Color.red);
        }
        if (days.isSelected() == true) {

            if (b == null) {
                err = true;

                de.setText("* Date Ending:");
                de.setForeground(Color.red);
            }
        }
        if (e1.equals("") || e2.equals("")) {
            err = true;
            te.setText("* Time Ending (24hrs):");
            te.setForeground(Color.red);
        }
        if (err == true) {
            javax.swing.JOptionPane.showMessageDialog(null, "Please complete all fields", "Message:ERROR!", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        if (err == false) {
            String dates = format.format(a);
                        if (b!=null)
                        {
            
                            date1 = format.format(b);}

            try {
                FileWriter up = new FileWriter("Upcoming Events.txt", true);
                PrintWriter upcom = new PrintWriter(up);
                if (days.isSelected()) {
                    upcom.println(id + "|" + n + "|" + pl + "|" + dates + "|" + t1 + "|" + t2 + "|" + date1 + "|" + e2 + "|" + e1 + "|" + days1 + "|" + hours1 + "|" + minutes);
                }
                if (hours.isSelected()) {
                    upcom.println(id + "|" + n + "|" + pl + "|" + dates + "|" + t1 + "|" + t2 + "|" + dates + "|" + e2 + "|" + e1 + "|" + "0" + "|" + hours1 + "|" + minutes);

                }

                upcom.close();
                FileWriter ids = new FileWriter("eventid.txt", false);
                PrintWriter idsave = new PrintWriter(ids);
                idsave.println(id);
                idsave.close();

                try {
                    FileReader idf = new FileReader("eventid.txt");
                    BufferedReader idFile = new BufferedReader(idf);
                    int idg = Integer.parseInt(idFile.readLine());
                    idg = idg + 1;
                    num.setText("" + idg);
                    idFile.close();
                } catch (Exception error) {

                }
            } catch (Exception error) {

            }
            na.setText("");
            loc.setText("");
            t4.setSelected(true);
            da.setDate(null);
            time.setText("");
            time1.setText("");
            da1.setDate(null);
            end.setText("");
            end1.setText("");
            hr.setText("");
            hr1.setText("");
            min2.setText("");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void numFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_numFocusGained

    private void hrFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hrFocusLost


    }//GEN-LAST:event_hrFocusLost

    private void da1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_da1FocusLost

    }//GEN-LAST:event_da1FocusLost

    private void da1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_da1MouseReleased
    }//GEN-LAST:event_da1MouseReleased

    private void da1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_da1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_da1ComponentAdded

    private void da1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_da1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_da1AncestorAdded

    private void da1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_da1FocusGained
    }//GEN-LAST:event_da1FocusGained

    private void da1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_da1InputMethodTextChanged
    }//GEN-LAST:event_da1InputMethodTextChanged

    private void da1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_da1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_da1ComponentShown

    private void da1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_da1MousePressed
    }//GEN-LAST:event_da1MousePressed

    private void da1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_da1MouseClicked
    }//GEN-LAST:event_da1MouseClicked

    private void da1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_da1MouseExited
    }//GEN-LAST:event_da1MouseExited

    private void hrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrActionPerformed

    }//GEN-LAST:event_hrActionPerformed

    private void endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endActionPerformed

    private void endFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_endFocusLost

    }//GEN-LAST:event_endFocusLost

    private void endCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_endCaretPositionChanged
    }//GEN-LAST:event_endCaretPositionChanged

    private void endKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_endKeyReleased
        String h1 = end1.getText();
        String m1 = end.getText();
        String h2 = time.getText();
        String m2 = time1.getText();
        int x = 0;
        int y = 0;
        if (!(h1.equals("")) && !(m1.equals("")) && !(h2.equals("")) && !(m2.equals(""))) {
            int hr2 = Integer.parseInt(h1);
            int minu1 = Integer.parseInt(m1);
            int hr3 = Integer.parseInt(h2);
            int minu2 = Integer.parseInt(m2);

            if (minu1 >= minu2) {
                x = hr2 - hr3;
                y = minu1 - minu2;

            }
            if (minu1 < minu2) {
                x = (hr2 - hr3) - 1;
                y = (minu1 + 60) - minu2;
            }
        }

        hr.setText(String.valueOf(x));
        min2.setText(String.valueOf(y));

        if (h1.equals("") || m1.equals("")) {
            hr.setText("");
            min2.setText("");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_endKeyReleased

    private void endKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_endKeyTyped
    }//GEN-LAST:event_endKeyTyped

    private void da1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_da1PropertyChange
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        
        Date dt1 = da.getDate();
        Date ds1 = da1.getDate();
        if (!(dt1 == null && ds1 == null)) {
            String diff = "";
            long timeDiff = Math.abs(ds1.getTime() - dt1.getTime());
            long hours1 = TimeUnit.MILLISECONDS.toHours(timeDiff);
            long difference = (hours1 / 24) + 1;
            diff = String.format("%d", difference);
            hr1.setText(diff);
        }
        de.setText("Date Ending:");
        de.setForeground(Color.black);
    }//GEN-LAST:event_da1PropertyChange

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeActionPerformed

    private void end1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_end1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_end1ActionPerformed

    private void time1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_time1ActionPerformed

    private void hoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoursActionPerformed
        if (hours.isSelected()) {
            te.setVisible(true);
            dur.setVisible(true);
            min2.setVisible(true);
            minu.setVisible(true);
            end.setVisible(true);
            hr.setVisible(true);
            end1.setVisible(true);
            dot2.setVisible(true);
            dur3.setVisible(true);

            de.setVisible(false);
            da1.setVisible(false);
            hr1.setVisible(false);
            dur1.setVisible(false);

        }
        dur2.setText("Duration:");
        dur2.setForeground(Color.black);
        de.setText("Date Ending:");
        de.setForeground(Color.black);
        te.setText("Time Ending (24hrs):");
        te.setForeground(Color.black);
    }//GEN-LAST:event_hoursActionPerformed

    private void daysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysActionPerformed
        if (days.isSelected()) {
            de.setVisible(true);
            dur.setVisible(true);
            da1.setVisible(true);
            hr.setVisible(true);
            hr1.setVisible(true);
            dur1.setVisible(true);
            te.setVisible(true);
            dur3.setVisible(true);
            end.setVisible(true);
            end1.setVisible(true);
            dot2.setVisible(true);
            min2.setVisible(true);
            minu.setVisible(true);
        }
        dur2.setText("Duration:");
        dur2.setForeground(Color.black);
        de.setText("Date Ending:");
        de.setForeground(Color.black);
        te.setText("Time Ending (24hrs):");
        te.setForeground(Color.black);
    }//GEN-LAST:event_daysActionPerformed

    private void hr1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hr1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_hr1FocusLost

    private void hr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hr1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hr1ActionPerformed

    private void end1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_end1KeyReleased
        String h1 = end1.getText();
        String m1 = end.getText();
        String h2 = time.getText();
        String m2 = time1.getText();
        int x = 0;
        int y = 0;
        if (!(h1.equals("")) && !(m1.equals("")) && !(h2.equals("")) && !(m2.equals(""))) {
            int hr2 = Integer.parseInt(h1);
            int minu1 = Integer.parseInt(m1);
            int hr3 = Integer.parseInt(h2);
            int minu2 = Integer.parseInt(m2);

            if (minu1 >= minu2) {
                x = hr2 - hr3;
                y = minu1 - minu2;

            }
            if (minu1 < minu2) {
                x = (hr2 - hr3) - 1;
                y = (minu1 + 60) - minu2;
            }
        }

        hr.setText(String.valueOf(x));
        min2.setText(String.valueOf(y));

        if (h1.equals("") || m1.equals("")) {
            hr.setText("");
            min2.setText("");
        }

    }//GEN-LAST:event_end1KeyReleased

    private void timeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeKeyReleased
        String h1 = end1.getText();
        String m1 = end.getText();
        String h2 = time.getText();
        String m2 = time1.getText();
        int x = 0;
        int y = 0;
        if (!(h1.equals("")) && !(m1.equals("")) && !(h2.equals("")) && !(m2.equals(""))) {
            int hr2 = Integer.parseInt(h1);
            int minu1 = Integer.parseInt(m1);
            int hr3 = Integer.parseInt(h2);
            int minu2 = Integer.parseInt(m2);

            if (minu1 >= minu2) {
                x = hr2 - hr3;
                y = minu1 - minu2;

            }
            if (minu1 < minu2) {
                x = (hr2 - hr3) - 1;
                y = (minu1 + 60) - minu2;
            }
        }

        hr.setText(String.valueOf(x));
        min2.setText(String.valueOf(y));

        if (h1.equals("") || m1.equals("")) {
            hr.setText("");
            min2.setText("");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_timeKeyReleased

    private void time1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_time1KeyReleased
        String h1 = end1.getText();
        String m1 = end.getText();
        String h2 = time.getText();
        String m2 = time1.getText();
        int x = 0;
        int y = 0;
        if (!(h1.equals("")) && !(m1.equals("")) && !(h2.equals("")) && !(m2.equals(""))) {
            int hr2 = Integer.parseInt(h1);
            int minu1 = Integer.parseInt(m1);
            int hr3 = Integer.parseInt(h2);
            int minu2 = Integer.parseInt(m2);

            if (minu1 >= minu2) {
                x = hr2 - hr3;
                y = minu1 - minu2;

            }
            if (minu1 < minu2) {
                x = (hr2 - hr3) - 1;
                y = (minu1 + 60) - minu2;
            }
        }

        hr.setText(String.valueOf(x));
        min2.setText(String.valueOf(y));

        if (h1.equals("") || m1.equals("")) {
            hr.setText("");
            min2.setText("");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_time1KeyReleased

    private void naFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_naFocusGained
        name1.setText("Name of event:");
        name1.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_naFocusGained

    private void locFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locFocusGained
        loca.setText("Location:");
        loca.setForeground(Color.black);
    }//GEN-LAST:event_locFocusGained

    private void daPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_daPropertyChange
        ds.setText("Date Starting:");
        ds.setForeground(Color.black);
    }//GEN-LAST:event_daPropertyChange

    private void timeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_timeFocusGained
        ts.setText("Time Starting (24hrs):");
        ts.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_timeFocusGained

    private void time1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_time1FocusGained
        ts.setText("Time Starting (24hrs):");
        ts.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_time1FocusGained

    private void end1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_end1FocusGained
        te.setText("Time Ending (24hrs):");
        te.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_end1FocusGained

    private void endFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_endFocusGained
        te.setText("Time Ending (24hrs):");
        te.setForeground(Color.black);         // TODO add your handling code here:
    }//GEN-LAST:event_endFocusGained

    private void naKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_naKeyReleased
String t = na.getText();
        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        na.setText(x+y);  }      // TODO add your handling code here:
    }//GEN-LAST:event_naKeyReleased

    private void locKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_locKeyReleased
String t = loc.getText();
        if (!(t.equals(""))){

        int l1 = t.length();
        String  x = (t.substring(0,1)).toUpperCase();

        String y = "";
        for (int i= 1;i<l1;i++){
        y = y + (t.substring(i,i+1)) ;  
            

        }
        loc.setText(x+y); }       // TODO add your handling code here:
    }//GEN-LAST:event_locKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private com.toedter.calendar.JDateChooser da;
    private com.toedter.calendar.JDateChooser da1;
    private javax.swing.JRadioButton days;
    private javax.swing.JLabel de;
    private javax.swing.JLabel dot;
    private javax.swing.JLabel dot2;
    private javax.swing.JLabel ds;
    private javax.swing.JLabel dur;
    private javax.swing.JLabel dur1;
    private javax.swing.JLabel dur2;
    private javax.swing.JLabel dur3;
    private javax.swing.JTextField end;
    private javax.swing.JTextField end1;
    private javax.swing.JRadioButton hours;
    private javax.swing.JTextField hr;
    private javax.swing.JTextField hr1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField loc;
    private javax.swing.JLabel loca;
    private javax.swing.JTextField min1;
    private javax.swing.JTextField min2;
    private javax.swing.JLabel minu;
    private javax.swing.JTextField na;
    private javax.swing.JLabel name1;
    private javax.swing.JTextField num;
    private javax.swing.JRadioButton t4;
    private javax.swing.JLabel te;
    private javax.swing.JTextField time;
    private javax.swing.JTextField time1;
    private javax.swing.JLabel ts;
    // End of variables declaration//GEN-END:variables

    private int countDiffDay(Calendar to, Calendar with) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
